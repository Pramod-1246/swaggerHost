{
  "openapi": "3.0.1",
  "info": {
  "title": "Digit Motor Insurance",
  "description": "Digit Motor Insurance API",
  "contact": {
  "name": "Satyanarayana Nalluri",
  "email": "satyanarayana.nalluri@godigit.com"
  },
  "version": "v2"
  },
  "servers": [
  {
  "url": "https://qze09b33e0.execute-api.ap-south-1.amazonaws.com/test",
  "description": "Production, URL to be shared after UAT",
  "variables": {}
  }
  ],
  "security": [
  {
  "https": []
  }
  ],
  "paths": {
  "/quote/deleteQuote": {
  "delete": {
  "tags": [
  "Motor Insurance"
  ],
  "summary": "This API will be used to delete old quotations",
  "description": "Method to delete old motor quotations",
  "operationId": "deleteQuote",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "mobileNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "externalPolicyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "licensePlateNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "204": {
  "description": "Successfully deletion of quote"
  },
  "400": {
  "description": "Policy issuance failure to invalid request parameters"
  },
  "500": {
  "description": "Failure due to server side problems"
  }
  }
  }
  },
  "/v2/contract": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "summary": "This API is used for fetching Digit's existing contract/ policy data, required for next renewal",
  "description": "Method to fetch fetch Digit's existing contract/ policy data, required for next renewal ",
  "operationId": "getMotorContractData",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "mobileNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "externalPolicyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "licensePlateNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Motor contract data successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorContractOut"
  }
  }
  }
  },
  "400": {
  "description": "Error while fetching Motor contract data, due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Error while fetching Motor contract data, due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/renewal/eligibility": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "summary": "This API is used for fetching Digit's existing contract/ policy data, required for next renewal",
  "description": "Method to fetch fetch Digit's existing contract/ policy data, required for next renewal ",
  "operationId": "getMotorContractRenewalEligibility",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "vehicleCode",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "registrationNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "motorType",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "previousPolicyExpiryDate",
  "in": "query",
  "schema": {
  "type": "string",
  "format": "date"
  }
  },
  {
  "name": "agentNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "productCode",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "quotationDate",
  "in": "query",
  "schema": {
  "type": "string",
  "format": "date"
  }
  },
  {
  "name": "isIMDSwapToBeBypass",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "vehicleOwnerName",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Request successfully processed",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorContractRenewalEligibility"
  }
  }
  }
  },
  "400": {
  "description": "Request cannot be processed due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Request cannot be processed due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to fetch Motor policy details",
  "operationId": "getMotorProposal_1",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "mobileNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "externalPolicyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "licensePlateNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Motor policy successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Error while fetching policy details, due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Error while fetching policy details, due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  },
  "post": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to create Motor proposal",
  "operationId": "postMotorProposal",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "isDownloadQuote",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isIssuePolicy",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Proposal successfully created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Proposal creation failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Proposal creation failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/ncb/data": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "summary": "This API is used for fetching NCB verification status",
  "description": "Method to fetch Motor NCB verification status",
  "operationId": "getNcbData",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "mobileNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "externalPolicyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "licensePlateNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Motor NCB verification status successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Error while fetching ncb verification status, due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Error while fetching ncb verification status, due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/{applicationId}/issuance": {
  "put": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to issue policy post payment",
  "operationId": "postIssueContract",
  "parameters": [
  {
  "name": "applicationId",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorIssueContractIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Policy successfully issued",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorIssueContractOut"
  }
  }
  }
  },
  "400": {
  "description": "Policy issuance failure to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Policy issuance failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quickquote": {
  "post": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to post and get motor insurance premium amount",
  "operationId": "postMotorQuickQuote",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorQuickQuoteIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Premium successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorQuickQuoteOut"
  }
  }
  }
  },
  "400": {
  "description": "premium fetching failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Premium fetching failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/{applicationId}": {
  "put": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to update Motor proposal",
  "operationId": "putMotorProposal",
  "parameters": [
  {
  "name": "applicationId",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "isDownloadQuote",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isIssuePolicy",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Proposal successfully updated",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Proposal updation failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Proposal updation failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/standalone/pa/underwriting": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to get Motor PA UW eligiblity before issuance",
  "operationId": "getMotorStandalonePAUnderWriting",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "rto",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "vehicleType",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "vehicleCapacity",
  "in": "query",
  "schema": {
  "type": "number"
  }
  }
  ],
  "requestBody": {
  "required": true
  },
  "responses": {
  "200": {
  "description": "Request successfully processed",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorStandalonePAUnderWriting"
  }
  }
  }
  },
  "400": {
  "description": "Request cannot be processed due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Request cannot be processed due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/v2/quote/standalone/pa/issuance": {
  "post": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to create Motor proposal",
  "operationId": "postIssueStandalonePAContract",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "isDownloadQuote",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isIssuePolicy",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorStandalonePAContractIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Proposal successfully created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorStandalonePAContractOut"
  }
  }
  }
  },
  "400": {
  "description": "Proposal creation failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Proposal creation failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/integration/v2/quote": {
  "get": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to fetch Motor policy details",
  "operationId": "getMotorProposal_2",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "policyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "mobileNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "externalPolicyNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "licensePlateNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "engineNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "chassisNumber",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Motor policy successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Error while fetching policy details, due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Error while fetching policy details, due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  },
  "post": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to create Motor proposal",
  "operationId": "postMotorProposal_1",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "isDownloadQuote",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isIssuePolicy",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerApplicationIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Proposal successfully created",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Proposal creation failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Proposal creation failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/integration/v2/quote/{applicationId}/issuance": {
  "put": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to issue policy post payment",
  "operationId": "postIssueContract_1",
  "parameters": [
  {
  "name": "applicationId",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorIssueContractIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Policy successfully issued",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorIssueContractOut"
  }
  }
  }
  },
  "400": {
  "description": "Policy issuance failure to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Policy issuance failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/integration/v2/quickquote": {
  "post": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to post and get motor insurance premium amount",
  "operationId": "postMotorQuickQuote_1",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerQuickQuoteIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Premium successfully fetched",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerQuickQuoteOut"
  }
  }
  }
  },
  "400": {
  "description": "premium fetching failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Premium fetching failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/integration/v2/quote/{applicationId}": {
  "put": {
  "tags": [
  "Motor Insurance"
  ],
  "description": "Method to update Motor proposal",
  "operationId": "putMotorProposal_1",
  "parameters": [
  {
  "name": "applicationId",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isPremiumRecalculate",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "userSpecialDiscountPercent",
  "in": "query",
  "schema": {
  "type": "number"
  }
  },
  {
  "name": "isUserSpecialDiscountOpted",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "applicationId",
  "in": "query",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "isDownloadQuote",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  },
  {
  "name": "isIssuePolicy",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerApplicationIn"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Proposal successfully updated",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/MotorPartnerApplicationOut"
  }
  }
  }
  },
  "400": {
  "description": "Proposal updation failure due to invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  },
  "500": {
  "description": "Proposal updation failure due to server side problems",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/AbstractOutput"
  }
  }
  }
  }
  }
  }
  },
  "/integration/bse-ebix/v1/proposal/GetPaymentStatus": {
  "post": {
  "operationId": "getProposalStatus",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/BSEEbixProposalStatusRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/bse-ebix/v1/proposal": {
  "post": {
  "operationId": "postMotorProposal_2",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/BSEEbixProposalRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/bse-ebix/v1/quotation": {
  "post": {
  "operationId": "postMotorQuotation",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/BSEEbixQuotationRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/bse-ebix/v1/proposal/updateBSEEbix": {
  "post": {
  "operationId": "postProposalStatusToBSEEbix",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/phonepe/v1/proposal": {
  "post": {
  "operationId": "postMotorProposal_3",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PhonePeProposalRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/phonepe/v1/proposal/status": {
  "post": {
  "operationId": "postMotorProposalStatus",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PhonePeProposalStatusRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  },
  "/integration/phonepe/v1/quotation": {
  "post": {
  "operationId": "postMotorQuotation_1",
  "parameters": [
  {
  "name": "source",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "WEB",
  "MOBILE_WEB",
  "MOBILE_APP"
  ]
  }
  },
  {
  "name": "sourceChannel",
  "in": "query",
  "schema": {
  "type": "string",
  "enum": [
  "PARTNER",
  "AGENT_PORTAL",
  "DIRECT_PORTAL",
  "RPA_BOT",
  "RENEWAL"
  ]
  }
  },
  {
  "name": "Authorization",
  "in": "header",
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "useSalesOffering",
  "in": "query",
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PhonePeQuotationRequest"
  }
  }
  }
  },
  "responses": {
  "default": {
  "description": "default response",
  "content": {
  "application/json": {}
  }
  }
  }
  }
  }
  },
  "components": {
  "schemas": {
  "AddOnCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "AddOnsCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "AdditionalCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "Address": {
  "title": "addresses",
  "required": [
  "addressId",
  "addressType",
  "city",
  "country",
  "pincode",
  "state",
  "street"
  ],
  "type": "object",
  "properties": {
  "addressId": {
  "title": "addressId",
  "type": "string",
  "description": "address identifier for already stord addresses"
  },
  "addressType": {
  "title": "addressType",
  "type": "string",
  "description": "Type of address, for individual, it can primary or secondary residence address, for organization or company, it can be head office/ quarters or regional offices",
  "enum": [
  "PRIMARY_RESIDENCE",
  "SECONDARY_RESIDENCE",
  "HEAD_QUARTER",
  "REGIONAL_OFFICE",
  "BRANCH_OFFICE"
  ]
  },
  "flatNumber": {
  "title": "flatNumber",
  "maxLength": 5,
  "minLength": 1,
  "type": "string",
  "description": "Flat number"
  },
  "streetNumber": {
  "title": "streetNumber",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Street number"
  },
  "street": {
  "title": "street",
  "maxLength": 79,
  "minLength": 1,
  "type": "string",
  "description": "Street",
  "example": "5th Avenue, Handewadi Raod, Hadapsar"
  },
  "district": {
  "title": "district",
  "maxLength": 79,
  "minLength": 1,
  "type": "string",
  "description": "District, Master will be shared",
  "example": "5th Avenue, Handewadi Raod, Hadapsar"
  },
  "state": {
  "title": "state",
  "maxLength": 2,
  "minLength": 1,
  "type": "string",
  "description": "State code, Master will be shared",
  "example": "Maharashtra, state = 27"
  },
  "city": {
  "title": "city",
  "maxLength": 79,
  "minLength": 1,
  "type": "string",
  "description": "City",
  "example": "Pune, city = Pune"
  },
  "country": {
  "title": "country",
  "maxLength": 3,
  "minLength": 1,
  "type": "string",
  "description": "Country ISO code, Master will be shared",
  "example": "India, country = IN"
  },
  "pincode": {
  "title": "pincode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Pincode/ Zipcode",
  "example": "Pune, pincode = 411001"
  },
  "geoCode": {
  "$ref": "#/components/schemas/GeoCode"
  },
  "zone": {
  "title": "zone",
  "maxLength": 1,
  "minLength": 1,
  "type": "string",
  "description": "Zone belonging to the pincode or city, Master will be shared for zone-pincode mapping",
  "example": "Pune/411001, zone = B"
  }
  },
  "description": "Model of address of policy holder or insured person"
  },
  "Bancassurance": {
  "title": "bancassurance",
  "type": "object",
  "properties": {
  "bankName": {
  "type": "string"
  },
  "bankLocationCode": {
  "type": "string"
  },
  "bankRMName": {
  "type": "string"
  },
  "bankRMCode": {
  "type": "string"
  },
  "loanAccountNumber": {
  "type": "string"
  },
  "customerId": {
  "type": "string"
  },
  "fromDateLoanValidity": {
  "type": "string",
  "format": "date"
  },
  "toDateLoanValidity": {
  "type": "string",
  "format": "date"
  },
  "additionalInformation": {
  "type": "string"
  }
  },
  "description": "Bancassurance details"
  },
  "Cess": {
  "title": "cesses",
  "required": [
  "cessAmount",
  "cessType"
  ],
  "type": "object",
  "properties": {
  "cessType": {
  "title": "cessType",
  "type": "string",
  "description": "Cess applied on the policy",
  "readOnly": true,
  "enum": [
  "KERELA_FLOOD_CESS"
  ]
  },
  "cessPercent": {
  "title": "cessPercent",
  "type": "number",
  "description": "Cess percent applied on the policy",
  "readOnly": true
  },
  "cessAmount": {
  "$ref": "#/components/schemas/Money"
  }
  },
  "description": "Cess details applied on the policy",
  "readOnly": true
  },
  "Communication": {
  "title": "communications",
  "required": [
  "communicationId",
  "communicationType",
  "identifier",
  "isPrefferedCommunication"
  ],
  "type": "object",
  "properties": {
  "identifier": {
  "title": "identifier",
  "type": "string",
  "description": "communication identifier for srored communications"
  },
  "communicationType": {
  "title": "communicationType",
  "type": "string",
  "description": "Type of communication",
  "enum": [
  "MOBILE",
  "TELEPHONE",
  "FAX",
  "EMAIL"
  ]
  },
  "communicationId": {
  "title": "communicationId",
  "maxLength": 100,
  "minLength": 1,
  "type": "string",
  "description": "Value of communication type, e.g. email Id, mobile/ tele phone no."
  },
  "isPrefferedCommunication": {
  "title": "isPrefferedCommunication",
  "type": "boolean",
  "description": "Is the communication type preffered way of communication?"
  }
  },
  "description": "Model of communication details for person"
  },
  "Company": {
  "required": [
  "addresses",
  "communications",
  "companyName",
  "identificationDocuments",
  "isPayer",
  "isPolicyHolder",
  "isVehicleOwner",
  "partyId"
  ],
  "type": "object",
  "description": "Model of Company or Organization",
  "allOf": [
  {
  "$ref": "#/components/schemas/Person"
  },
  {
  "type": "object",
  "properties": {
  "companyName": {
  "title": "companyName",
  "maxLength": 150,
  "minLength": 1,
  "type": "string",
  "description": "Name of company or organization"
  }
  }
  }
  ]
  },
  "Contract": {
  "required": [
  "currentNoClaimBonus",
  "insuranceProductCode",
  "isNCBTransfer",
  "policyHolderType",
  "productUniqueIndentifier",
  "subInsuranceProductCode"
  ],
  "type": "object",
  "properties": {
  "insuranceProductCode": {
  "title": "insuranceProductCode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Digit insurance product code"
  },
  "subInsuranceProductCode": {
  "title": "subInsuranceProductCode",
  "maxLength": 2,
  "minLength": 1,
  "type": "string",
  "description": "Digit insurance package code for a given insurance product code"
  },
  "productUniqueIndentifier": {
  "title": "productUniqueIndentifier",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Unique identifier for a given insurance product code"
  },
  "startDate": {
  "title": "startDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Start date of the contract",
  "format": "date",
  "nullable": true
  },
  "endDate": {
  "title": "endDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Expiry date of the contract",
  "format": "date",
  "nullable": true
  },
  "policyTerm": {
  "title": "policyTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Term of motor policy, max 3 years for Private Car, 1 year for Commercial vehicle, 5 years for 2W",
  "format": "int32"
  },
  "policyNumber": {
  "title": "policyNumber",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Digit generated motor insurance policy no.",
  "readOnly": true
  },
  "externalPolicyNumber": {
  "title": "externalPolicyNumber",
  "maxLength": 20,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated proposal number"
  },
  "coverages": {
  "title": "coverages",
  "type": "array",
  "description": "Motor covergae details",
  "items": {
  "$ref": "#/components/schemas/Cover"
  }
  },
  "policyHolderType": {
  "title": "policyHolderType",
  "type": "string",
  "description": "Type of policy holder, Individual or Company",
  "enum": [
  "INDIVIDUAL",
  "COMPANY"
  ]
  },
  "currentNoClaimBonus": {
  "title": "currentNoClaimBonus",
  "type": "string",
  "description": "No claim bonus in current policy",
  "readOnly": true,
  "enum": [
  "ZERO",
  "TWENTY",
  "TWENTY_FIVE",
  "THIRTY_FIVE",
  "FORTY_FIVE",
  "FIFTY",
  "FIFTY_FIVE",
  "SIXTY_FIVE"
  ]
  },
  "isNCBTransfer": {
  "title": "isNCBTransfer",
  "type": "boolean",
  "description": "Is NCB transfered to current policy?"
  },
  "purchaseDate": {
  "title": "purchaseDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Purchase date of the policy",
  "format": "date",
  "nullable": true
  },
  "quotationDate": {
  "title": "quotationDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "First Quotation date of the proposal",
  "format": "date",
  "nullable": true
  },
  "agentCode": {
  "title": "agentCode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Agent code"
  },
  "isRenewalAvailable": {
  "title": "isRenewalAvailable",
  "type": "boolean",
  "description": "Return renewal flag for the application",
  "readOnly": true
  },
  "amendmentReason": {
  "title": "amendmentReason",
  "type": "string",
  "description": "Digit Amendment reason "
  },
  "policyComment": {
  "title": "policyComment",
  "type": "array",
  "description": "Digit contract comment ",
  "items": {
  "$ref": "#/components/schemas/PolicyComment"
  }
  }
  },
  "description": "Motor contract details"
  },
  "Countries": {
  "title": "countries",
  "required": [
  "Countries",
  "countryCode",
  "countryName"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "type": "boolean"
  },
  "countryName": {
  "title": "countryName",
  "type": "string",
  "description": "Country Name"
  },
  "countryCode": {
  "title": "countryCode",
  "type": "string",
  "description": "Country Code"
  },
  "Countries": {
  "type": "string"
  }
  },
  "description": "Country details",
  "discriminator": {
  "propertyName": "Countries"
  }
  },
  "Cover": {
  "title": "coverages",
  "required": [
  "coverType"
  ],
  "type": "object",
  "properties": {
  "coverAvailability": {
  "type": "string",
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "coverCode": {
  "type": "string",
  "enum": [
  "THIRD_PARTY",
  "OWN_DAMAGE",
  "PA_OWNER",
  "PA_UNNAMED",
  "LEGAL_LIABILITY",
  "RSA_ADDON",
  "OTHER_ADDON",
  "FIRE",
  "THEFT",
  "ADDONS",
  "ACCESSORIES"
  ]
  },
  "name": {
  "type": "string"
  },
  "componentNumber": {
  "type": "string"
  },
  "selection": {
  "type": "boolean"
  },
  "status": {
  "type": "string",
  "readOnly": true,
  "enum": [
  "FREE_PREMIUM",
  "ACTIVE",
  "CANCELLED"
  ]
  },
  "value": {
  "$ref": "#/components/schemas/Value"
  },
  "discount": {
  "$ref": "#/components/schemas/Discount"
  },
  "surcharge": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "subCovers": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Cover"
  }
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "tariffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "baseNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "voluntaryDeductible": {
  "type": "string",
  "enum": [
  "ZERO",
  "THOUSAND",
  "TWO_THOUSAND",
  "TWENTYFIVE_HUNDRED",
  "THREE_THOUSAND",
  "FOUR_THOUSAND",
  "FIVE_THOUSAND",
  "SIX_THOUSAND",
  "SEVEN_THOUSAND",
  "SEVENTYFIVE_HUNDRED",
  "EIGHT_THOUSAND",
  "NINE_THOUSAND",
  "TEN_THOUSAND",
  "ELEVEN_THOUSAND",
  "TWELVE_THOUSAND",
  "THIRTEEN_THOUSAND",
  "FOURTEEN_THOUSAND",
  "FIFTEEN_THOUSAND",
  "SIXTEEN_THOUSAND",
  "SEVENTEEN_THOUSAND",
  "EIGHTEEN_THOUSAND",
  "NINETEEN_THOUSAND",
  "TWENTY_THOUSAND",
  "TWENTY_ONE_THOUSAND",
  "TWENTY_TWO_THOUSAND",
  "TWENTY_THREE_THOUSAND",
  "TWENTY_FOUR_THOUSAND",
  "TWENTY_FIVE_THOUSAND"
  ]
  },
  "coPay": {
  "type": "number"
  },
  "countries": {
  "title": "countries",
  "type": "array",
  "description": "Contries for Geographical Extension",
  "items": {
  "$ref": "#/components/schemas/Countries"
  }
  },
  "plan": {
  "type": "string",
  "readOnly": true,
  "enum": [
  "PLAN_A",
  "PLAN_B",
  "PLAN_C",
  "PLAN_D",
  "PLAN_E"
  ]
  },
  "tyreType": {
  "type": "string",
  "readOnly": true,
  "enum": [
  "RUN_FLAT",
  "OTHERS"
  ]
  },
  "coverType": {
  "type": "string"
  }
  },
  "description": "Cover details",
  "discriminator": {
  "propertyName": "coverType"
  }
  },
  "CurrencyUnit": {
  "type": "object",
  "properties": {
  "code": {
  "type": "string"
  },
  "numericCode": {
  "type": "integer",
  "format": "int32"
  },
  "decimalPlaces": {
  "type": "integer",
  "format": "int32"
  },
  "countryCodes": {
  "uniqueItems": true,
  "type": "array",
  "items": {
  "type": "string"
  }
  },
  "numeric3Code": {
  "type": "string"
  },
  "pseudoCurrency": {
  "type": "boolean"
  },
  "defaultFractionDigits": {
  "type": "integer",
  "format": "int32"
  },
  "currencyCode": {
  "type": "string"
  },
  "symbol": {
  "type": "string"
  }
  }
  },
  "CurrentThirdPartyPolicy": {
  "title": "currentThirdPartyPolicy",
  "required": [
  "currentThirdPartyPolicyExpiryDateTime",
  "currentThirdPartyPolicyStartDateTime",
  "isCurrentThirdPartyPolicyActive"
  ],
  "type": "object",
  "properties": {
  "isCurrentThirdPartyPolicyActive": {
  "title": "isCurrentThirdPartyPolicyActive",
  "type": "boolean",
  "description": "Is current TP policy active? Mandatory for OD only policies"
  },
  "currentThirdPartyPolicyInsurerCode": {
  "title": "currentThirdPartyPolicyInsurerCode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Current TP policy insurer code, master to be shared, Mandatory for OD only policies"
  },
  "currentThirdPartyPolicyNumber": {
  "title": "currentThirdPartyPolicyNumber",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Current TP policy number, Mandatory for OD only policies"
  },
  "currentThirdPartyPolicyStartDateTime": {
  "title": "currentThirdPartyPolicyStartDateTime",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Current TP policy start date, Mandatory for OD only policies",
  "format": "date-time"
  },
  "currentThirdPartyPolicyExpiryDateTime": {
  "title": "currentThirdPartyPolicyExpiryDateTime",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Current TP policy expiry date, Mandatory for OD only policies",
  "format": "date-time"
  }
  },
  "description": "Current existing TP policy details, mandatory for OD only"
  },
  "DigitDocument": {
  "title": "documents",
  "required": [
  "comments",
  "documentDownloadLink",
  "documentEncodedContent",
  "documentFileName",
  "documentType",
  "documentUploadStatus"
  ],
  "type": "object",
  "properties": {
  "documentId": {
  "title": "documentId",
  "type": "string",
  "description": "System generated unique document ID"
  },
  "documentFileName": {
  "title": "documentFileName",
  "type": "string",
  "description": "Document file name with extension"
  },
  "documentType": {
  "title": "documentType",
  "type": "string",
  "description": "Document type"
  },
  "documentEncodedContent": {
  "title": "documentEncodedContent",
  "type": "string",
  "description": "Document content encoded in base64 format"
  },
  "comments": {
  "title": "comments",
  "type": "string",
  "description": "Comments given against the document to be uploaded"
  },
  "documentDate": {
  "title": "documentDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Date when document was uploaded or created in core insurance system",
  "format": "date-time",
  "readOnly": true
  },
  "documentDownloadLink": {
  "title": "documentDownloadLink",
  "type": "string",
  "description": "Digit document download link from file storage system"
  },
  "documentUploadStatus": {
  "title": "documentUploadStatus",
  "type": "string",
  "description": "Document upload status when it is uploaded in file storage system",
  "readOnly": true,
  "enum": [
  "SUCCESS",
  "FAILED"
  ]
  },
  "documentByteArray": {
  "title": "documentByteArray",
  "type": "array",
  "description": "Document content converted to byte array",
  "deprecated": true,
  "items": {
  "title": "documentByteArray",
  "type": "string",
  "description": "Document content converted to byte array",
  "format": "byte",
  "deprecated": true
  }
  }
  },
  "description": "Document object schema"
  },
  "DigitError": {
  "title": "error",
  "required": [
  "errorCode"
  ],
  "type": "object",
  "properties": {
  "errorCode": {
  "title": "errorCode",
  "type": "integer",
  "description": "Validation error code",
  "format": "int32",
  "readOnly": true
  },
  "httpCode": {
  "title": "httpCode",
  "type": "integer",
  "description": "HTTP code",
  "format": "int32",
  "readOnly": true
  },
  "validationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "validationMessages",
  "type": "string",
  "description": "Error messages",
  "readOnly": true
  }
  },
  "errorLink": {
  "title": "errorLink",
  "type": "string",
  "description": "URL of failed internal service",
  "readOnly": true
  },
  "errorStackTrace": {
  "title": "errorStackTrace",
  "type": "string",
  "description": "Stack trace from where the error occured",
  "readOnly": true
  }
  },
  "description": "Model of error object",
  "readOnly": true
  },
  "Discount": {
  "type": "object",
  "properties": {
  "userSpecialDiscountPercent": {
  "title": "userSpecialDiscountPercent",
  "type": "number",
  "description": "User opted discount percentage on tariff premium"
  },
  "defaultSpecialDiscountPercent": {
  "title": "defaultSpecialDiscountPercent",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "defaultSpecialDiscountPercentWithPreInspection": {
  "title": "defaultSpecialDiscountPercentWithPreInspection",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "defaultSpecialDiscountPercentWithoutPreInspection": {
  "title": "defaultSpecialDiscountPercentWithoutPreInspection",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "defaultSpecialDiscountPercentWithZeroDep": {
  "title": "defaultSpecialDiscountPercentWithZeroDep",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "defaultSpecialDiscountPercentWithoutZeroDep": {
  "title": "defaultSpecialDiscountPercentWithoutZeroDep",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "effectiveSpecialDiscountPercent": {
  "title": "effectiveSpecialDiscountPercent",
  "type": "number",
  "description": "Effective discount applied on net premium",
  "readOnly": true
  },
  "effectiveSpecialDiscountPercentWithPreInspection": {
  "title": "effectiveSpecialDiscountPercentWithPreInspection",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "effectiveSpecialDiscountPercentWithoutPreInspection": {
  "title": "effectiveSpecialDiscountPercentWithoutPreInspection",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "effectiveSpecialDiscountPercentWithZeroDep": {
  "title": "effectiveSpecialDiscountPercentWithZeroDep",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "effectiveSpecialDiscountPercentWithoutZeroDep": {
  "title": "effectiveSpecialDiscountPercentWithoutZeroDep",
  "type": "number",
  "description": "Default applied discount",
  "readOnly": true
  },
  "minSpecialDiscountPercent": {
  "title": "minSpecialDiscountPercent",
  "type": "number",
  "description": "Min. applicable discount applicable",
  "readOnly": true
  },
  "maxSpecialDiscountPercent": {
  "title": "maxSpecialDiscountPercent",
  "type": "number",
  "description": "Max. applicable discount applicable",
  "readOnly": true
  },
  "minSpecialDiscountPercentWithZeroDep": {
  "title": "minSpecialDiscountPercentWithZeroDep",
  "type": "number",
  "description": "Min. applicable discount applicable when ZD is selected",
  "readOnly": true
  },
  "maxSpecialDiscountPercentWithZeroDep": {
  "title": "maxSpecialDiscountPercentWithZeroDep",
  "type": "number",
  "description": "Max. applicable discount applicable when ZD is selected",
  "readOnly": true
  },
  "minSpecialDiscountPercentWithoutZeroDep": {
  "title": "minSpecialDiscountPercentWithoutZeroDep",
  "type": "number",
  "description": "Min. applicable discount applicable when ZD is not selected",
  "readOnly": true
  },
  "maxSpecialDiscountPercentWithoutZeroDep": {
  "title": "maxSpecialDiscountPercentWithoutZeroDep",
  "type": "number",
  "description": "Max. applicable discount applicable when ZD is not selected",
  "readOnly": true
  },
  "appliedPreInspectionDiscount": {
  "title": "appliedPreInspectionDiscount",
  "type": "number",
  "description": "Applied PI discount in case PI is opted",
  "readOnly": true
  },
  "appliedPreInspectionDiscountWithZeroDep": {
  "title": "appliedPreInspectionDiscountWithZeroDep",
  "type": "number",
  "description": "Applied PI discount in case PI is opted with ZD",
  "readOnly": true
  },
  "appliedPreInspectionDiscountWithoutZeroDep": {
  "title": "appliedPreInspectionDiscountWithoutZeroDep",
  "type": "number",
  "description": "Applied PI discount in case PI is opted without ZD",
  "readOnly": true
  },
  "maxPreInspectionDiscount": {
  "title": "maxPreInspectionDiscount",
  "type": "number",
  "description": "Max. offered discount in case PI is opted",
  "readOnly": true
  },
  "minPreInspectionDiscount": {
  "title": "minPreInspectionDiscount",
  "type": "number",
  "description": "Min. offered discount in case PI is opted",
  "readOnly": true
  },
  "maxPreInspectionDiscountWithZeroDep": {
  "title": "maxPreInspectionDiscountWithZeroDep",
  "type": "number",
  "description": "Max. offered discount in case PI is opted with zero dep",
  "readOnly": true
  },
  "minPreInspectionDiscountWithZeroDep": {
  "title": "minPreInspectionDiscountWithZeroDep",
  "type": "number",
  "description": "Min. offered discount in case PI is opted with zero dep",
  "readOnly": true
  },
  "maxPreInspectionDiscountWithoutZeroDep": {
  "title": "maxPreInspectionDiscountWithoutZeroDep",
  "type": "number",
  "description": "Max. offered discount in case PI is opted without zero dep",
  "readOnly": true
  },
  "minPreInspectionDiscountWithoutZeroDep": {
  "title": "minPreInspectionDiscountWithoutZeroDep",
  "type": "number",
  "description": "Min. offered discount in case PI is opted without zero dep",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercent": {
  "title": "effectiveIncrementalCommissionPercent",
  "type": "number",
  "description": "Effective incremental commission percent given to user",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithoutPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithoutPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithZeroDep": {
  "title": "effectiveIncrementalCommissionPercentWithZeroDep",
  "type": "number",
  "description": "Effective incremental commission percent given to user when ZD is selected",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithoutZeroDep": {
  "title": "effectiveIncrementalCommissionPercentWithoutZeroDep",
  "type": "number",
  "description": "Effective incremental commission percent given to user when ZD is not selected",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithZeroDepWithPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithZeroDepWithPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user in case PI is opted when ZD is not selected",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithoutZeroDepWithPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithoutZeroDepWithPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user in case PI is opted when ZD is not selected",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithZeroDepWithoutPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithZeroDepWithoutPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user in case PI is not opted when ZD is selected",
  "readOnly": true
  },
  "effectiveIncrementalCommissionPercentWithoutZeroDepWithoutPreInspection": {
  "title": "effectiveIncrementalCommissionPercentWithoutZeroDepWithoutPreInspection",
  "type": "number",
  "description": "Effective incremental commission percent given to user in case PI is not opted when ZD is not selected",
  "readOnly": true
  },
  "discounts": {
  "title": "discounts",
  "type": "array",
  "description": "List of different discounts to be applied on the cover",
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithPreInspection": {
  "title": "discountsWithPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithoutPreInspection": {
  "title": "discountsWithoutPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithZeroDep": {
  "title": "discountsWithZeroDep",
  "type": "array",
  "description": "List of different discounts to be applied on the cover",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithoutZeroDep": {
  "title": "discountsWithoutZeroDep",
  "type": "array",
  "description": "List of different discounts to be applied on the cover",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithZeroDepWithPreInspection": {
  "title": "discountsWithZeroDepWithPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover in case PI is opted with ZD",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithoutZeroDepWithPreInspection": {
  "title": "discountsWithoutZeroDepWithPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover in case PI is opted without ZD",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithZeroDepWithoutPreInspection": {
  "title": "discountsWithZeroDepWithoutPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover in case PI is not opted with ZD",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "discountsWithoutZeroDepWithoutPreInspection": {
  "title": "discountsWithoutZeroDepWithoutPreInspection",
  "type": "array",
  "description": "List of different discounts to be applied on the cover in case PI is not opted without ZD",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/OtherDiscounts"
  }
  },
  "userDefaultCommissionPercent": {
  "type": "number"
  },
  "newUserCommissionPercent": {
  "type": "number"
  }
  }
  },
  "FireCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "GeoCode": {
  "title": "geoCode",
  "required": [
  "latitude",
  "longitude"
  ],
  "type": "object",
  "properties": {
  "latitude": {
  "title": "latitude",
  "type": "string",
  "description": "Latitude coordinates of the localtion, in degrees"
  },
  "longitude": {
  "title": "longitude",
  "type": "string",
  "description": "Longitude cooridnates of the location, in degrees"
  }
  },
  "description": "Model of geo code"
  },
  "GrossVehicleWeight": {
  "title": "grossVehicleWeight",
  "required": [
  "grossVehicleWeight"
  ],
  "type": "object",
  "properties": {
  "defaulGrossVehicleWeight": {
  "type": "number"
  },
  "grossVehicleWeight": {
  "title": "grossVehicleWeight",
  "type": "number",
  "description": "Customer opted GVW"
  },
  "minGrossVehicleWeight": {
  "title": "minGrossVehicleWeight",
  "type": "number",
  "description": "Digit's system generated minimum GVW"
  },
  "maxGrossVehicleWeight": {
  "title": "maxGrossVehicleWeight",
  "type": "number",
  "description": "Digit's system generated minimum GVW"
  }
  },
  "description": "Gross Vehicle Weight of the vehicle"
  },
  "IdentificationDocument": {
  "title": "identificationDocuments",
  "required": [
  "documentId",
  "documentType",
  "identificationDocumentId"
  ],
  "type": "object",
  "properties": {
  "identificationDocumentId": {
  "title": "identificationDocumentId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Identification document identifier for stored documents"
  },
  "documentType": {
  "title": "documentType",
  "type": "string",
  "description": "Type of identification document",
  "enum": [
  "AADHAR_CARD",
  "PAN_CARD",
  "GST",
  "PASSPORT",
  "DRIVING_LICENSE",
  "VOTER_ID_CARD",
  "RATION_CARD"
  ]
  },
  "documentId": {
  "title": "documentId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Identification document number"
  },
  "issuingAuthority": {
  "title": "issuingAuthority",
  "maxLength": 100,
  "minLength": 1,
  "type": "string"
  },
  "issuingPlace": {
  "title": "issuingPlace",
  "maxLength": 3,
  "minLength": 1,
  "type": "string",
  "description": "Identification document place of issuance country code, Master will be shared"
  },
  "issueDate": {
  "title": "issueDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Identification document date of issuance",
  "format": "date",
  "nullable": true
  },
  "expiryDate": {
  "title": "expiryDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Identification document date of expiration",
  "format": "date",
  "nullable": true
  }
  },
  "description": "Model of person identification documents like PAN, Aadhar, etc"
  },
  "Individual": {
  "title": "nominee",
  "required": [
  "addresses",
  "communications",
  "dateOfBirth",
  "firstName",
  "identificationDocuments",
  "isPayer",
  "isPolicyHolder",
  "isVehicleOwner",
  "lastName",
  "partyId"
  ],
  "type": "object",
  "properties": {
  "partyId": {
  "title": "partyId",
  "maxLength": 100,
  "minLength": 1,
  "type": "string",
  "description": "Unique intentifier of the person, not be changed, required for update proposal"
  },
  "addresses": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Address"
  }
  },
  "communications": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Communication"
  }
  },
  "identificationDocuments": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/IdentificationDocument"
  }
  },
  "isPolicyHolder": {
  "title": "isPolicyHolder",
  "type": "boolean",
  "description": "Is person the policy holder?"
  },
  "isPayer": {
  "title": "isPayer",
  "type": "boolean",
  "description": "Is person the policy premium payer?"
  },
  "isVehicleOwner": {
  "title": "isVehicleOwner",
  "type": "boolean",
  "description": "Is person the owner of the vehicle?"
  },
  "title": {
  "title": "title",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Title of the person, e.g. Mr. - 1, Mrs.- 2 ; Master will be shared"
  },
  "firstName": {
  "title": "firstName",
  "maxLength": 65,
  "minLength": 1,
  "type": "string",
  "description": "First name of the person"
  },
  "middleName": {
  "title": "middleName",
  "maxLength": 65,
  "minLength": 1,
  "type": "string",
  "description": "Middle name of the person"
  },
  "lastName": {
  "title": "lastName",
  "type": "string",
  "description": "Gender of the person",
  "enum": [
  "MALE",
  "FEMALE",
  "OTHERS",
  "THIRDGENDER"
  ]
  },
  "dateOfBirth": {
  "title": "dateOfBirth",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Individual's date of birth",
  "format": "date",
  "example": "1991-01-21"
  },
  "relation": {
  "title": "relation",
  "type": "string",
  "description": "Relation with policy holder"
  },
  "isDriver": {
  "title": "isDriver",
  "type": "boolean",
  "description": "Is individual the primary driver of the insured vehicle?"
  },
  "isInsuredPerson": {
  "title": "isInsuredPerson",
  "type": "boolean",
  "description": "Is individual the primary primary insured person?"
  }
  },
  "description": "Model of Individual person details"
  },
  "LegalLiabilityCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "insuredCount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "insuredCount": {
  "title": "insuredCount",
  "minimum": 1,
  "type": "integer",
  "description": "Insured person count",
  "format": "int32"
  }
  }
  },
  "Loading": {
  "title": "loadings",
  "required": [
  "totalLoadingAmount"
  ],
  "type": "object",
  "properties": {
  "totalLoadingAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "otherLoadings": {
  "title": "otherLoadings",
  "type": "array",
  "description": "Different type(s) surcharges applied on the net premium",
  "items": {
  "$ref": "#/components/schemas/OtherLoading"
  }
  }
  },
  "description": "Loading i.e. extra amount applied in the proposal",
  "readOnly": true
  },
  "Money": {
  "title": "premiumAmount",
  "pattern": "{A-Z}{A-Z}{A-Z} [+-]?[0-9]*[.]?[0-9]*",
  "type": "object",
  "properties": {
  "scale": {
  "type": "integer",
  "format": "int32"
  },
  "amount": {
  "type": "number"
  },
  "currencyUnit": {
  "$ref": "#/components/schemas/CurrencyUnit"
  },
  "amountMajor": {
  "type": "number"
  },
  "amountMajorLong": {
  "type": "integer",
  "format": "int64"
  },
  "amountMajorInt": {
  "type": "integer",
  "format": "int32"
  },
  "amountMinor": {
  "type": "number"
  },
  "amountMinorLong": {
  "type": "integer",
  "format": "int64"
  },
  "amountMinorInt": {
  "type": "integer",
  "format": "int32"
  },
  "minorPart": {
  "type": "integer",
  "format": "int32"
  },
  "positiveOrZero": {
  "type": "boolean"
  },
  "negativeOrZero": {
  "type": "boolean"
  },
  "negative": {
  "type": "boolean"
  },
  "zero": {
  "type": "boolean"
  },
  "positive": {
  "type": "boolean"
  }
  },
  "description": "Total premium amount"
  },
  "MotorApplicationOut": {
  "required": [
  "applicationId",
  "bancassurance",
  "cesses",
  "contract",
  "dealer",
  "discounts",
  "documents",
  "enquiryId",
  "grossPremium",
  "loadings",
  "motorBreakIn",
  "motorQuestions",
  "netPremium",
  "nominee",
  "payment",
  "persons",
  "policyNumber",
  "policyState",
  "policyStatus",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "serviceTax",
  "source",
  "state",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  },
  "source": {
  "$ref": "#/components/schemas/OnlineSource"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "motorBreakIn": {
  "$ref": "#/components/schemas/MotorBreakIn"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  }
  },
  "description": "Motor application create/ update response object"
  },
  "MotorBreakIn": {
  "title": "motorBreakIn",
  "type": "object",
  "properties": {
  "isBreakin": {
  "title": "isBreakin",
  "type": "boolean",
  "description": "Did policy has breakin?",
  "readOnly": true
  },
  "breakinExcess": {
  "title": "breakinExcess",
  "type": "number",
  "description": "In case of break-in, what was the excess amount charged?",
  "readOnly": true
  },
  "breakinComments": {
  "title": "breakinComments",
  "type": "string",
  "description": "In case of break-in, comments by approver?",
  "readOnly": true
  },
  "isPreInspectionWaived": {
  "title": "isPreInspectionWaived",
  "type": "boolean",
  "description": "In case of break-in, is the pre-inspection wavied?",
  "readOnly": true
  },
  "isPreInspectionCompleted": {
  "title": "isPreInspectionCompleted",
  "type": "boolean",
  "description": "In case of break-in, is the pre-inspection completed?",
  "readOnly": true
  },
  "isDocumentUploaded": {
  "title": "isDocumentUploaded",
  "type": "boolean",
  "description": "In case of break-in, is the pre-inspection document(s) uploaded?",
  "readOnly": true
  }
  },
  "description": "BreakIn details",
  "readOnly": true
  },
  "MotorDealer": {
  "title": "dealer",
  "required": [
  "city",
  "dealerName"
  ],
  "type": "object",
  "properties": {
  "dealerName": {
  "title": "dealerName",
  "maxLength": 80,
  "minLength": 1,
  "type": "string",
  "description": "Name of the dealer"
  },
  "city": {
  "title": "city",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "City of dealer"
  },
  "deliveryDate": {
  "title": "deliveryDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Delivery date of the vehicle",
  "format": "date",
  "example": "1991-01-21"
  }
  },
  "description": "Motor dealer details"
  },
  "MotorQuestions": {
  "title": "motorQuestions",
  "type": "object",
  "properties": {
  "furtherAgreement": {
  "title": "furtherAgreement",
  "type": "string",
  "description": "Further agreement details"
  },
  "selfInspection": {
  "title": "selfInspection",
  "type": "boolean",
  "description": "Is customer opting for self inspection?"
  },
  "financerType": {
  "title": "financerType",
  "type": "string",
  "description": "Finance type like Financed, Hire To Purchase, Lease agreement",
  "enum": [
  "FINANCER",
  "HIRE",
  "LESSOR"
  ]
  },
  "financer": {
  "title": "financer",
  "type": "string",
  "description": "Financer details"
  },
  "inspectionType": {
  "title": "inspectionType",
  "type": "string",
  "description": "Inspection Type details"
  },
  "piType": {
  "title": "piType",
  "type": "string",
  "description": "Pi Type details"
  },
  "whatsappCommunicationConstent": {
  "title": "whatsappCommunicationConstent",
  "type": "boolean",
  "description": "Do we have the customer consent for sending messages on WhatsApp?"
  }
  },
  "description": "Additional motor questions"
  },
  "MotorTransits": {
  "title": "motorTransits",
  "required": [
  "destinationLocation",
  "sourceLocation"
  ],
  "type": "object",
  "properties": {
  "sourceLocation": {
  "title": "sourceLocation",
  "type": "string",
  "description": "Source Location"
  },
  "destinationLocation": {
  "title": "destinationLocation",
  "type": "string",
  "description": "Destination Location"
  }
  },
  "description": "Motor Transists"
  },
  "OnlineSource": {
  "title": "source",
  "type": "object",
  "properties": {
  "utmSource": {
  "type": "string"
  },
  "utmMedium": {
  "type": "string"
  },
  "utmCampaign": {
  "type": "string"
  },
  "utmContent": {
  "type": "string"
  },
  "utmTerm": {
  "type": "string"
  }
  },
  "description": "Online source details"
  },
  "OtherDiscounts": {
  "title": "discountsWithoutZeroDepWithoutPreInspection",
  "required": [
  "discountAmount",
  "discountCode",
  "discountPercent",
  "discountType"
  ],
  "type": "object",
  "properties": {
  "discountType": {
  "title": "discountType",
  "type": "string",
  "description": "Type of discount applied",
  "enum": [
  "AGE_ENTRY_DISCOUNT",
  "NCB_DISCOUNT",
  "SPECIAL_DISCOUNT",
  "UW_DISCOUNT",
  "SAFE_DRIVER_DISCOUNT",
  "SALES_CAMPAIGN_DISCOUNT",
  "PAN_CARD_DISCOUNT",
  "RENEWAL_DISCOUNT",
  "EARLY_SIGNING_DISCOUNT",
  "IMD_DISCOUNT",
  "COUPON_DISCOUNT",
  "BUDGET_DISCONUT",
  "RB"
  ]
  },
  "discountPercent": {
  "title": "discountPercent",
  "type": "number",
  "description": "Discount percent applied on the net premium"
  },
  "discountAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "discountCode": {
  "title": "discountCode",
  "type": "string",
  "description": "Applicable discount code"
  }
  },
  "description": "List of different discounts to be applied on the cover in case PI is not opted without ZD",
  "readOnly": true
  },
  "OtherLoading": {
  "title": "loadings",
  "required": [
  "loadingAmount",
  "loadingPercent",
  "loadingType"
  ],
  "type": "object",
  "properties": {
  "loadingType": {
  "title": "loadingType",
  "type": "string",
  "description": "Type of surcharge applied",
  "enum": [
  "BMI_LOADING",
  "FAMILY_LOADING",
  "SMOKER_LOADING",
  "SPECIAL_LOADING",
  "RENEWAL_LOADING",
  "UW_LOADING",
  "RB",
  "OTHER_LOADING"
  ]
  },
  "loadingPercent": {
  "title": "loadingPercent",
  "type": "number",
  "description": "Surcharge percent applied on the net premium"
  },
  "loadingAmount": {
  "$ref": "#/components/schemas/Money"
  }
  },
  "description": "List of different loadings to be applied on the cover"
  },
  "OwnDamageCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  },
  {
  "type": "object",
  "properties": {
  "ncbDiscountWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "surchargeWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDep": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDep": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  }
  }
  }
  ]
  },
  "PAOwnerDriverCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "PAUnnamedCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "POSPInfo": {
  "title": "pospInfo",
  "required": [
  "isPOSP",
  "pospAadhaarNumber",
  "pospContactNumber",
  "pospLocation",
  "pospName",
  "pospPanNumber",
  "pospUniqueNumber"
  ],
  "type": "object",
  "properties": {
  "isPOSP": {
  "title": "isPOSP",
  "type": "boolean",
  "description": "Is user is POSP?"
  },
  "pospName": {
  "title": "pospName",
  "type": "string",
  "description": "POSP name"
  },
  "pospUniqueNumber": {
  "title": "pospUniqueNumber",
  "type": "string",
  "description": "POSP unique identifier number"
  },
  "pospLocation": {
  "title": "pospLocation",
  "type": "string",
  "description": "Location of POSP"
  },
  "pospPanNumber": {
  "title": "pospPanNumber",
  "type": "string",
  "description": "PAN number of POSP"
  },
  "pospAadhaarNumber": {
  "title": "pospAadhaarNumber",
  "type": "string",
  "description": "Aadhaar number of POSP"
  },
  "pospContactNumber": {
  "title": "pospContactNumber",
  "type": "string",
  "description": "Contact number of POSP"
  }
  },
  "description": "POSP issuer details",
  "nullable": true
  },
  "Payment": {
  "title": "payment",
  "required": [
  "paymentDate",
  "paymentType",
  "premiumAmount"
  ],
  "type": "object",
  "properties": {
  "paymentSource": {
  "type": "string",
  "enum": [
  "CUSTOMER_CHEQUE",
  "DEALER_CHEQUE"
  ]
  },
  "paymentType": {
  "title": "paymentType",
  "type": "string",
  "description": "Type of payment",
  "enum": [
  "ONLINE",
  "CHEQUE",
  "CASH",
  "AGENT_FLOAT",
  "DEMAND_DRAFT",
  "BANK_TRANSFER"
  ]
  },
  "premiumAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "transactionId": {
  "title": "transactionId",
  "type": "string",
  "description": "Payment transactionId for Online payments"
  },
  "paymentDate": {
  "title": "paymentDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Payment date time",
  "format": "date-time"
  },
  "instrumentNumber": {
  "title": "instrumentNumber",
  "type": "string",
  "description": "Physical payment instrument number, e.g.: Cheque number, etc"
  },
  "ifscCode": {
  "title": "ifscCode",
  "type": "string",
  "description": "Payment bank IFSC code for Cheque or Demand draft payment type"
  },
  "micrCode": {
  "title": "micrCode",
  "type": "string",
  "description": "Payment bank MICR code for Cheque or Demand draft payment type"
  },
  "agentConsent": {
  "title": "agentConsent",
  "type": "string",
  "description": "Identify the payment between cheque and agent account"
  }
  },
  "description": "Model of payment details"
  },
  "Person": {
  "title": "persons",
  "required": [
  "addresses",
  "communications",
  "identificationDocuments",
  "isPayer",
  "isPolicyHolder",
  "isVehicleOwner",
  "partyId",
  "personType"
  ],
  "type": "object",
  "properties": {
  "partyId": {
  "title": "partyId",
  "maxLength": 100,
  "minLength": 1,
  "type": "string",
  "description": "Unique intentifier of the person, not be changed, required for update proposal"
  },
  "addresses": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Address"
  }
  },
  "communications": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Communication"
  }
  },
  "identificationDocuments": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/IdentificationDocument"
  }
  },
  "isPolicyHolder": {
  "title": "isPolicyHolder",
  "type": "boolean",
  "description": "Is person the policy holder?"
  },
  "isPayer": {
  "title": "isPayer",
  "type": "boolean",
  "description": "Is person the policy premium payer?"
  },
  "isVehicleOwner": {
  "title": "isVehicleOwner",
  "type": "boolean",
  "description": "Is person the owner of the vehicle?"
  },
  "personType": {
  "type": "string"
  }
  },
  "description": "Abstract model for persons details",
  "discriminator": {
  "propertyName": "personType"
  },
  "anyOf": [
  {
  "$ref": "#/components/schemas/Individual"
  },
  {
  "$ref": "#/components/schemas/Company"
  }
  ]
  },
  "PolicyComment": {
  "title": "policyComment",
  "type": "object",
  "properties": {
  "text": {
  "type": "string"
  },
  "creationDateTime": {
  "type": "string"
  },
  "creator": {
  "type": "string"
  },
  "responsibleUnit": {
  "type": "string"
  },
  "origin": {
  "type": "string"
  },
  "partyLink": {
  "type": "string"
  },
  "summaryText": {
  "type": "string"
  }
  },
  "description": "Digit contract comment "
  },
  "PreInspection": {
  "title": "preInspection",
  "required": [
  "approvalType",
  "inspectionType",
  "isPreInspectionEligible",
  "isPreInspectionEligibleWithZeroDep",
  "isPreInspectionEligibleWithoutZeroDep",
  "isPreInspectionOpted",
  "isPreInspectionRequired",
  "isPreInspectionRequiredWithZeroDep",
  "isPreInspectionRequiredWithoutZeroDep",
  "isPreInspectionWaived",
  "isSchoolBusWaiverEligibleWithTPlusFortyEight",
  "photoCode",
  "piType",
  "rid"
  ],
  "type": "object",
  "properties": {
  "isPreInspectionOpted": {
  "title": "isPreInspectionOpted",
  "type": "boolean",
  "description": "Is pre-inspection opted for rollover breakin and non-break-in cases?"
  },
  "isPreInspectionRequired": {
  "title": "isPreInspectionRequired",
  "type": "boolean",
  "description": "Is pre-inspection required for rollover breakin and non-break-in cases?",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionEligible": {
  "title": "isPreInspectionEligible",
  "type": "boolean",
  "description": "Is pre-inspection eligible for rollover breakin and non-break-in cases?",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionRequiredWithZeroDep": {
  "title": "isPreInspectionRequiredWithZeroDep",
  "type": "boolean",
  "description": "Is pre-inspection required for rollover breakin and non-break-in cases with Zero Dep selection",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionEligibleWithZeroDep": {
  "title": "isPreInspectionEligibleWithZeroDep",
  "type": "boolean",
  "description": "Is pre-inspection eligible for rollover breakin and non-break-in cases with Zero Dep selection",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionRequiredWithoutZeroDep": {
  "title": "isPreInspectionRequiredWithoutZeroDep",
  "type": "boolean",
  "description": "Is pre-inspection required for rollover breakin and non-break-in cases without Zero Dep selection",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionEligibleWithoutZeroDep": {
  "title": "isPreInspectionEligibleWithoutZeroDep",
  "type": "boolean",
  "description": "Is pre-inspection eligible for rollover breakin and non-break-in cases without Zero Dep selection",
  "readOnly": true,
  "deprecated": true
  },
  "isPreInspectionWaived": {
  "title": "isPreInspectionWaived",
  "type": "boolean",
  "description": "Is pre-inspection wavied off?",
  "readOnly": true
  },
  "isSchoolBusWaiverEligibleWithTPlusFortyEight": {
  "title": "isSchoolBusWaiverEligibleWithTPlusFortyEight",
  "type": "boolean",
  "description": "Is pre-inspection wavied off eligible for school bus with rid T plus forty eight hours?",
  "readOnly": true
  },
  "piType": {
  "title": "piType",
  "type": "string",
  "description": "pre inspection type",
  "readOnly": true
  },
  "photoCode": {
  "title": "photoCode",
  "type": "integer",
  "description": "Photo Code",
  "format": "int32",
  "readOnly": true
  },
  "rid": {
  "title": "rid",
  "type": "string",
  "description": "rid",
  "readOnly": true
  },
  "inspectionType": {
  "title": "inspectionType",
  "type": "string",
  "description": "inspectionType",
  "readOnly": true
  },
  "approvalType": {
  "title": "approvalType",
  "type": "string",
  "description": "Approval Type",
  "readOnly": true
  }
  },
  "description": "Pre Inspection details"
  },
  "PreviousInsurer": {
  "title": "previousInsurer",
  "required": [
  "currentThirdPartyPolicy",
  "isClaimInLastYear",
  "maxAllowedNCB",
  "previousNoClaimBonus",
  "previousNoClaimBonusValue",
  "previousPolicyExpiryDate"
  ],
  "type": "object",
  "properties": {
  "isPreviousInsurerKnown": {
  "title": "isPreviousInsurerKnown",
  "maxLength": 10,
  "minLength": 1,
  "type": "boolean",
  "description": "Previous insurer code, master to be shared"
  },
  "previousInsurerCode": {
  "title": "previousInsurerCode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Previous insurer code, master to be shared"
  },
  "previousPolicyNumber": {
  "title": "previousPolicyNumber",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Previous insurer policy number"
  },
  "previousPolicyExpiryDate": {
  "title": "previousPolicyExpiryDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Previous policy expiry date",
  "format": "date",
  "example": "1991-01-21"
  },
  "isClaimInLastYear": {
  "title": "isClaimInLastYear",
  "type": "boolean",
  "description": "Is claimed taken in last year?"
  },
  "originalPreviousPolicyType": {
  "title": "originalPreviousPolicyType",
  "type": "string",
  "description": "Previous policy type, Master to be shared"
  },
  "previousNoClaimBonus": {
  "title": "previousNoClaimBonus",
  "type": "string",
  "description": "No claim bonus from previous policy",
  "enum": [
  "ZERO",
  "TWENTY",
  "TWENTY_FIVE",
  "THIRTY_FIVE",
  "FORTY_FIVE",
  "FIFTY",
  "FIFTY_FIVE",
  "SIXTY_FIVE"
  ]
  },
  "previousNoClaimBonusValue": {
  "title": "previousNoClaimBonusValue",
  "type": "number",
  "description": "Value of No claim bonus from previous policy"
  },
  "currentThirdPartyPolicy": {
  "$ref": "#/components/schemas/CurrentThirdPartyPolicy"
  },
  "isLaidupPeriodActiveInPreviousPolicy": {
  "title": "isLaidupPeriodActiveInPreviousPolicy",
  "type": "boolean",
  "description": "Flag to know if laid-up clause was activated in previous policy",
  "readOnly": true
  },
  "laidupRefundableAmountInPreviousPolicy": {
  "$ref": "#/components/schemas/Money"
  },
  "previousPolicyLossEventDate": {
  "title": "previousPolicyLossEventDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Previous policy loss event  date",
  "format": "date-time"
  },
  "maxAllowedNCB": {
  "title": "maxAllowedNCB",
  "type": "integer",
  "description": "Maximum NCB allowed",
  "format": "int32",
  "readOnly": true
  }
  },
  "description": "Previous insurer details"
  },
  "ServiceTax": {
  "title": "serviceTax",
  "required": [
  "cgst",
  "igst",
  "sgst",
  "taxType",
  "totalTax",
  "utgst"
  ],
  "type": "object",
  "properties": {
  "cgst": {
  "$ref": "#/components/schemas/Money"
  },
  "sgst": {
  "$ref": "#/components/schemas/Money"
  },
  "igst": {
  "$ref": "#/components/schemas/Money"
  },
  "utgst": {
  "$ref": "#/components/schemas/Money"
  },
  "totalTax": {
  "$ref": "#/components/schemas/Money"
  },
  "taxType": {
  "title": "taxType",
  "type": "string",
  "description": "Type of Indian tax applied in the proposal",
  "readOnly": true,
  "enum": [
  "IGST",
  "SGST_CGST",
  "UTGST_CGST"
  ]
  }
  },
  "description": "Tax details",
  "readOnly": true
  },
  "StandalonePersonalAccidentCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "Surcharge": {
  "type": "object",
  "properties": {
  "userSurchargePercent": {
  "type": "number"
  },
  "effectiveSurchargePercent": {
  "type": "number"
  },
  "loadings": {
  "title": "loadings",
  "type": "array",
  "description": "List of different loadings to be applied on the cover",
  "items": {
  "$ref": "#/components/schemas/OtherLoading"
  }
  }
  }
  },
  "TheftCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "ThirdPartyCover": {
  "type": "object",
  "allOf": [
  {
  "$ref": "#/components/schemas/Cover"
  }
  ]
  },
  "Trailer": {
  "title": "trailers",
  "required": [
  "bodyType",
  "chassisNumber",
  "idv",
  "isTrailerAlreadyInsured",
  "licensePlateNumber",
  "make",
  "previousInsurer",
  "trailerIDV"
  ],
  "type": "object",
  "properties": {
  "isTrailerAlreadyInsured": {
  "title": "isTrailerAlreadyInsured",
  "type": "boolean",
  "description": "Is trailer already insured with Digit GIC?"
  },
  "make": {
  "title": "make",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Make of the trailer"
  },
  "bodyType": {
  "title": "bodyType",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Body type of the trailer"
  },
  "licensePlateNumber": {
  "title": "licensePlateNumber",
  "maxLength": 12,
  "minLength": 1,
  "type": "string",
  "description": "License plate/ registration number of the trailer"
  },
  "chassisNumber": {
  "title": "chassisNumber",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Chassis number of the trailer"
  },
  "idv": {
  "title": "idv",
  "type": "number",
  "description": "Customer opted IDV",
  "deprecated": true
  },
  "trailerIDV": {
  "$ref": "#/components/schemas/VehicleIDV"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  }
  },
  "description": "Trailer information"
  },
  "Value": {
  "type": "object",
  "properties": {
  "valueType": {
  "type": "string",
  "enum": [
  "SUM_INSURED",
  "INSURED_COUNT",
  "TERM_COUNT",
  "DEDUCTIBLE"
  ]
  },
  "insuredValue": {
  "type": "number"
  },
  "minValue": {
  "type": "number"
  },
  "maxValue": {
  "type": "number"
  },
  "validValues": {
  "type": "array",
  "items": {
  "type": "number"
  }
  }
  }
  },
  "Vehicle": {
  "title": "vehicle",
  "required": [
  "grossVehicleWeight",
  "isValidatedFromVahan",
  "isVehicleNew",
  "licensePlateNumber",
  "manufactureDate",
  "registrationDate",
  "vehicleBodyIDV",
  "vehicleIDV",
  "vehicleMaincode"
  ],
  "type": "object",
  "properties": {
  "varient": {
  "type": "string"
  },
  "vehicleCategory": {
  "type": "string"
  },
  "subCategory": {
  "type": "string"
  },
  "isVehicleNew": {
  "title": "isVehicleNew",
  "type": "boolean",
  "description": "Is vehicle new or old?"
  },
  "isValidatedFromVahan": {
  "title": "isValidatedFromVahan",
  "type": "boolean",
  "description": "Is vehicle validated from Vahan?",
  "readOnly": true
  },
  "vehicleMaincode": {
  "title": "vehicleMaincode",
  "maxLength": 15,
  "minLength": 1,
  "type": "string",
  "description": "Vehicle master code, master to be shared"
  },
  "licensePlateNumber": {
  "title": "licensePlateNumber",
  "maxLength": 15,
  "minLength": 4,
  "type": "string",
  "description": "Vehicle license plate, registration number, for new vehicle only RTO code"
  },
  "vehicleIdentificationNumber": {
  "title": "vehicleIdentificationNumber",
  "maxLength": 30,
  "minLength": 5,
  "type": "string",
  "description": "Vehicle identification/ chasis number of the vehicle"
  },
  "engineNumber": {
  "title": "engineNumber",
  "maxLength": 30,
  "minLength": 5,
  "type": "string",
  "description": "Engine number of the vehicle"
  },
  "manufactureDate": {
  "title": "manufactureDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Vehilce manufacture date of the vehicle",
  "format": "date",
  "example": "1991-01-21"
  },
  "registrationDate": {
  "title": "registrationDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Vehicle registration date of teh vehicle",
  "format": "date",
  "example": "1991-01-21"
  },
  "vehicleIDV": {
  "$ref": "#/components/schemas/VehicleIDV"
  },
  "vehicleBodyIDV": {
  "$ref": "#/components/schemas/VehicleIDV"
  },
  "bodyType": {
  "title": "bodyType",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Vehicle body type"
  },
  "bodyColour": {
  "title": "bodyColour",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Vehicle body colour"
  },
  "vehicleType": {
  "title": "vehicleType",
  "type": "string",
  "description": "Vehicle type, mandatory for CV"
  },
  "usageType": {
  "title": "usageType",
  "type": "string",
  "description": "Vehicle usage type, mandatory for CV"
  },
  "permitType": {
  "title": "permitType",
  "type": "string",
  "description": "Vehicle permit, mandatory for CV",
  "enum": [
  "PUBLIC",
  "PRIVATE",
  "PUBLIC_PRIVATE"
  ]
  },
  "trailers": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Trailer"
  }
  },
  "odometerReading": {
  "title": "odometerReading",
  "type": "number",
  "description": "Odometer Reading"
  },
  "annualMileage": {
  "title": "annualMileage",
  "type": "number",
  "description": "Annual Mileage"
  },
  "batteryNumber": {
  "title": "batteryNumber",
  "type": "string",
  "description": "batteryNumber"
  },
  "chargerNumber": {
  "title": "chargerNumber",
  "type": "string",
  "description": "Charger Number"
  },
  "grossVehicleWeight": {
  "$ref": "#/components/schemas/GrossVehicleWeight"
  },
  "make": {
  "title": "make",
  "type": "string",
  "description": "Make/ Brand of the vehicle"
  },
  "model": {
  "title": "model",
  "type": "string",
  "description": "Model of the vehicle"
  },
  "motorType": {
  "title": "motorType",
  "type": "string",
  "description": "Motor type, mandatory for CV"
  },
  "seatingCapacity": {
  "title": "seatingCapacity",
  "type": "integer",
  "description": "Seating Capacity, mandatory for CV",
  "format": "int32"
  },
  "ownershipSerialNumber": {
  "title": "ownershipSerialNumber",
  "type": "string",
  "description": "Ownership serial number of the used (sold) vehicle"
  },
  "vehicleCapacity": {
  "title": "vehicleCapacity",
  "type": "number",
  "description": "Vehicle's engine capacity in cubic cms"
  },
  "fastTagNumber": {
  "title": "fastTagNumber",
  "maxLength": 30,
  "type": "string",
  "description": "Fast Tag number of the vehicle"
  }
  },
  "description": "Vehilce details"
  },
  "VehicleIDV": {
  "title": "trailerIDV",
  "required": [
  "idv"
  ],
  "type": "object",
  "properties": {
  "idv": {
  "title": "idv",
  "type": "number",
  "description": "Customer opted IDV"
  },
  "defaultIdv": {
  "title": "defaultIdv",
  "type": "number",
  "description": "Digit's system generated default IDV"
  },
  "minimumIdv": {
  "title": "minimumIdv",
  "type": "number",
  "description": "Digit's system generated minimum IDV"
  },
  "maximumIdv": {
  "title": "maximumIdv",
  "type": "number",
  "description": "Digit's system generated minimum IDV"
  }
  },
  "description": "Vehicle IDV details"
  },
  "AbstractOutput": {
  "required": [
  "enquiryId"
  ],
  "type": "object",
  "properties": {
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  }
  },
  "description": "Abstract input for all type of input models"
  },
  "AmendmentRecovery": {
  "title": "amendmentRecovery",
  "type": "object",
  "properties": {
  "budgetRecoveryAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "tarifPremiumDifferenceRecoveryAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "ownDamageCommercialPremiumDifferenceRecoveryAmount": {
  "$ref": "#/components/schemas/Money"
  },
  "addonsPremiumDifferenceRecoveryAmount": {
  "$ref": "#/components/schemas/Money"
  }
  },
  "description": "For Recovery endorsement due to incorrect NCB correction or ownership transfer"
  },
  "MotorAmendmentApplicationOut": {
  "required": [
  "applicationId",
  "bancassurance",
  "cesses",
  "contract",
  "dealer",
  "discounts",
  "documents",
  "enquiryId",
  "grossPremium",
  "loadings",
  "motorBreakIn",
  "motorQuestions",
  "netPremium",
  "nominee",
  "payableOrRefundablePolicyGrossPremium",
  "payableOrRefundablePolicyNetPremium",
  "payment",
  "persons",
  "policyNumber",
  "policyState",
  "policyStatus",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "serviceTax",
  "source",
  "state",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  },
  "source": {
  "$ref": "#/components/schemas/OnlineSource"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "amendmentRecovery": {
  "$ref": "#/components/schemas/AmendmentRecovery"
  },
  "motorBreakIn": {
  "$ref": "#/components/schemas/MotorBreakIn"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "payableOrRefundablePolicyNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "payableOrRefundablePolicyGrossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  }
  },
  "description": "Motor application create/ update response object"
  },
  "MotorApplicationIn": {
  "required": [
  "bancassurance",
  "contract",
  "dealer",
  "documents",
  "enquiryId",
  "motorQuestions",
  "nominee",
  "payment",
  "persons",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "source",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  },
  "source": {
  "$ref": "#/components/schemas/OnlineSource"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  }
  },
  "description": "Motor application create/ update request object"
  },
  "MotorAmendmentApplicationIn": {
  "required": [
  "bancassurance",
  "contract",
  "dealer",
  "documents",
  "enquiryId",
  "motorQuestions",
  "nominee",
  "payment",
  "persons",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "source",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  },
  "source": {
  "$ref": "#/components/schemas/OnlineSource"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "amendmentRecovery": {
  "$ref": "#/components/schemas/AmendmentRecovery"
  }
  },
  "description": "Motor amendment application create/ update request object"
  },
  "MotorContractOut": {
  "required": [
  "currentNCB",
  "eligibleNCB",
  "eligibleNCBNumeric",
  "insuranceProductCode",
  "isClaimMadeOnPolicy",
  "odCoverExpiryDate",
  "policyExpiryDate",
  "policyNumber",
  "policyStartDate",
  "subInsuranceProductCode",
  "tpCoverExpiryDate"
  ],
  "type": "object",
  "properties": {
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Requested policy number",
  "readOnly": true
  },
  "insuranceProductCode": {
  "title": "insuranceProductCode",
  "type": "string",
  "description": "Requested policy product code",
  "readOnly": true
  },
  "subInsuranceProductCode": {
  "title": "subInsuranceProductCode",
  "type": "string",
  "description": "Requested policy product sub-code",
  "readOnly": true
  },
  "policyStartDate": {
  "title": "policyStartDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Start date of the requested policy",
  "format": "date-time",
  "readOnly": true
  },
  "policyExpiryDate": {
  "title": "policyExpiryDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "Expiry date of the requested policy",
  "format": "date-time",
  "readOnly": true
  },
  "tpCoverExpiryDate": {
  "title": "tpCoverExpiryDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "TP Cover expiry date of the requested policy",
  "format": "date-time",
  "readOnly": true
  },
  "odCoverExpiryDate": {
  "title": "odCoverExpiryDate",
  "pattern": "yyyy-MM-dd'T'HH:mm:ss",
  "type": "string",
  "description": "OD Cover expiry date of the requested policy",
  "format": "date-time",
  "readOnly": true
  },
  "currentNCB": {
  "title": "currentNCB",
  "type": "string",
  "description": "Current NCB Percentage provided by Digit on the requested policy",
  "readOnly": true,
  "enum": [
  "ZERO",
  "TWENTY",
  "TWENTY_FIVE",
  "THIRTY_FIVE",
  "FORTY_FIVE",
  "FIFTY",
  "FIFTY_FIVE",
  "SIXTY_FIVE"
  ]
  },
  "isClaimMadeOnPolicy": {
  "title": "isClaimMadeOnPolicy",
  "type": "boolean",
  "description": "Is claim(s) made on requested policy?",
  "readOnly": true
  },
  "imdCode": {
  "title": "imdCode",
  "type": "string",
  "description": "IMD Code belonging to the requested policy",
  "readOnly": true
  },
  "salesChannel": {
  "title": "salesChannel",
  "type": "string",
  "description": "Sales Channel belonging to the requested policy",
  "readOnly": true
  },
  "pricingChannel": {
  "title": "pricingChannel",
  "type": "string",
  "description": "Pricing Channel belonging to the requested policy",
  "readOnly": true
  },
  "contractStatus": {
  "title": "contractStatus",
  "type": "string",
  "description": "Contract Status of the requested policy",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "vehicleMaincode": {
  "title": "vehicleMaincode",
  "type": "string",
  "description": "Insured vehicle maincode of the requested policy",
  "readOnly": true
  },
  "actualPolicyType": {
  "title": "actualPolicyType",
  "type": "string",
  "description": "Actual policy type of the proposal or contract",
  "readOnly": true
  },
  "policyType": {
  "title": "policyType",
  "type": "string",
  "description": "Policy type of the proposal or contract",
  "readOnly": true
  },
  "vehicleIDV": {
  "title": "vehicleIDV",
  "type": "number",
  "description": "IDV of the vehicle if Comprehensive or OD only",
  "readOnly": true
  },
  "eligibleNCB": {
  "title": "eligibleNCB",
  "type": "string",
  "description": "NCB to be provided by Digit on the requested policy's renewal",
  "readOnly": true,
  "enum": [
  "ZERO",
  "TWENTY",
  "TWENTY_FIVE",
  "THIRTY_FIVE",
  "FORTY_FIVE",
  "FIFTY",
  "FIFTY_FIVE",
  "SIXTY_FIVE"
  ]
  },
  "eligibleNCBNumeric": {
  "title": "eligibleNCBNumeric",
  "type": "integer",
  "description": "NCB numeric value to be provided by Digit on the requested policy's renewal",
  "format": "int32",
  "readOnly": true
  }
  }
  },
  "MotorContractRenewalEligibility": {
  "type": "object",
  "properties": {
  "isRenewalEligible": {
  "type": "boolean"
  },
  "previousPolicyNumber": {
  "type": "string"
  },
  "previousPolicyAgentNumber": {
  "type": "string"
  },
  "previousPolicyType": {
  "type": "string"
  },
  "previousPolicyTechCD": {
  "type": "number"
  },
  "previousPolicyProductCode": {
  "type": "string"
  },
  "existingTPPolicyTPCoverStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "existingTPPolicyTPCoverExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "existingTPPolicyInsurer": {
  "type": "string"
  },
  "existingTPPolicyNumber": {
  "type": "string"
  },
  "previousPolicyStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "previousPolicyExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "previousPolicyTPCoverExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "previousPolicyODCoverExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "numberOfClaimsMade": {
  "type": "integer",
  "format": "int32"
  },
  "vehicleIDV": {
  "type": "number"
  },
  "bodyIDV": {
  "type": "number"
  },
  "cngIDV": {
  "type": "number"
  },
  "elecAccIDV": {
  "type": "number"
  },
  "nonElecAccIDV": {
  "type": "number"
  },
  "previousPolicyNoClaimBonus": {
  "type": "number"
  },
  "previousPolicyProductPackage": {
  "type": "string"
  },
  "vehicleMaincode": {
  "type": "string"
  },
  "vehicleRegistrationDate": {
  "type": "string",
  "format": "date"
  },
  "isActiveAgent": {
  "type": "boolean"
  },
  "isAgentSwapAllowed": {
  "type": "boolean"
  },
  "isLaidupPeriodActiveInPreviousPolicy": {
  "type": "boolean"
  },
  "laidupRefundableAmountInPreviousPolicy": {
  "type": "number"
  },
  "laidUpODRenewalAdditionalBenefit": {
  "type": "number"
  },
  "validationType": {
  "type": "string"
  },
  "validationMessage": {
  "type": "string"
  },
  "previousMotorType": {
  "type": "string"
  }
  }
  },
  "MotorNcbQuestions": {
  "type": "object",
  "properties": {
  "isNcbVerificationDone": {
  "title": "isNcbVerificationDone",
  "type": "boolean",
  "description": "NCB Verification Status",
  "readOnly": true
  },
  "isNcbRecovered": {
  "title": "isNcbRecovered",
  "type": "boolean",
  "description": "NCB Recovred or not",
  "readOnly": true
  },
  "ncbRecoveryAmount": {
  "title": "ncbRecoveryAmount",
  "type": "number",
  "description": "NCB Amount",
  "readOnly": true
  }
  }
  },
  "MotorIssueContractOut": {
  "required": [
  "applicationId",
  "cesses",
  "discounts",
  "enquiryId",
  "externalPolicyNumber",
  "grossPremium",
  "loadings",
  "netPremium",
  "payment",
  "policyNumber",
  "policyState",
  "policyStatus",
  "serviceTax",
  "state"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "externalPolicyNumber": {
  "title": "externalPolicyNumber",
  "maxLength": 20,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated proposal number"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  }
  },
  "description": "Motor issue contract response object"
  },
  "MotorIssueContractIn": {
  "required": [
  "enquiryId",
  "externalPolicyNumber",
  "payment"
  ],
  "type": "object",
  "properties": {
  "externalPolicyNumber": {
  "title": "externalPolicyNumber",
  "maxLength": 20,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated proposal number"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  }
  },
  "description": "Motor issue contract request object"
  },
  "MotorQuickQuoteOut": {
  "required": [
  "applicationId",
  "cesses",
  "contract",
  "discounts",
  "enquiryId",
  "grossPremium",
  "loadings",
  "motorBreakIn",
  "netPremium",
  "pinCode",
  "policyNumber",
  "policyState",
  "policyStatus",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "serviceTax",
  "state",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "pinCode": {
  "title": "pinCode",
  "type": "string",
  "description": "Pincode of residence"
  },
  "motorBreakIn": {
  "$ref": "#/components/schemas/MotorBreakIn"
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  }
  },
  "description": "Motor quick quote response object"
  },
  "MotorQuickQuoteIn": {
  "required": [
  "contract",
  "enquiryId",
  "pinCode",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "pinCode": {
  "title": "pinCode",
  "type": "string",
  "description": "Pincode of residence"
  }
  },
  "description": "Motor quick quote request object"
  },
  "MotorStandalonePAUnderWriting": {
  "required": [
  "enquiryId"
  ],
  "type": "object",
  "properties": {
  "underwritingDecision": {
  "type": "string",
  "enum": [
  "PASSED",
  "REFERRED",
  "DECLINED"
  ]
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  }
  }
  },
  "MotorStandalonePAContractOut": {
  "required": [
  "applicationId",
  "cesses",
  "discounts",
  "enquiryId",
  "grossPremium",
  "loadings",
  "netPremium",
  "policyNumber",
  "policyState",
  "policyStatus",
  "serviceTax",
  "state"
  ],
  "type": "object",
  "properties": {
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "documents": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "persons": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  }
  }
  },
  "MotorStandalonePAContractIn": {
  "required": [
  "enquiryId"
  ],
  "type": "object",
  "properties": {
  "contract": {
  "$ref": "#/components/schemas/Contract"
  },
  "documents": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "persons": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  }
  }
  },
  "AbstractMotorAddonCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "AccessoriesCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "maxAllowed",
  "minAllowed",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "minAllowed": {
  "title": "minAllowed",
  "minimum": 0,
  "type": "number",
  "description": "Min. allowed cover SI amount",
  "readOnly": true
  },
  "maxAllowed": {
  "title": "maxAllowed",
  "minimum": 0,
  "type": "number",
  "description": "Max. allowed cover SI amount",
  "readOnly": true
  }
  }
  },
  "KeyAndLockProtectCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "claimsCovered": {
  "type": "string",
  "enum": [
  "ONE",
  "TWO",
  "UNLIMITED",
  "ONE_PB",
  "ONE_KP"
  ]
  },
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "MotorAccessoriesCover": {
  "type": "object",
  "properties": {
  "cng": {
  "$ref": "#/components/schemas/AccessoriesCover"
  },
  "electrical": {
  "$ref": "#/components/schemas/AccessoriesCover"
  },
  "nonElectrical": {
  "$ref": "#/components/schemas/AccessoriesCover"
  }
  }
  },
  "MotorAddonsCover": {
  "type": "object",
  "properties": {
  "partsDepreciation": {
  "$ref": "#/components/schemas/PartsDepreciationCover"
  },
  "personalBelonging": {
  "$ref": "#/components/schemas/PersonalBelongingCover"
  },
  "keyAndLockProtect": {
  "$ref": "#/components/schemas/KeyAndLockProtectCover"
  },
  "roadSideAssistance": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  },
  "engineProtection": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  },
  "tyreProtection": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  },
  "rimProtection": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  },
  "returnToInvoice": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  },
  "consumables": {
  "$ref": "#/components/schemas/AbstractMotorAddonCover"
  }
  }
  },
  "MotorContract": {
  "title": "contract",
  "required": [
  "currentNoClaimBonus",
  "insuranceProductCode",
  "isNCBTransfer",
  "policyHolderType",
  "subInsuranceProductCode"
  ],
  "type": "object",
  "properties": {
  "insuranceProductCode": {
  "title": "insuranceProductCode",
  "maxLength": 10,
  "minLength": 1,
  "type": "string",
  "description": "Digit insurance product code"
  },
  "subInsuranceProductCode": {
  "title": "subInsuranceProductCode",
  "maxLength": 2,
  "minLength": 1,
  "type": "string",
  "description": "Digit insurance package code for a given insurance product code"
  },
  "startDate": {
  "title": "startDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Start date of the contract",
  "format": "date",
  "nullable": true
  },
  "endDate": {
  "title": "endDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Expiry date of the contract",
  "format": "date",
  "nullable": true
  },
  "policyHolderType": {
  "title": "policyHolderType",
  "type": "string",
  "description": "Type of policy holder, Individual or Company",
  "enum": [
  "INDIVIDUAL",
  "COMPANY"
  ]
  },
  "externalPolicyNumber": {
  "title": "externalPolicyNumber",
  "maxLength": 20,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated proposal number"
  },
  "currentNoClaimBonus": {
  "title": "currentNoClaimBonus",
  "type": "string",
  "description": "No claim bonus in current policy",
  "readOnly": true,
  "enum": [
  "ZERO",
  "TWENTY",
  "TWENTY_FIVE",
  "THIRTY_FIVE",
  "FORTY_FIVE",
  "FIFTY",
  "FIFTY_FIVE",
  "SIXTY_FIVE"
  ]
  },
  "isNCBTransfer": {
  "title": "isNCBTransfer",
  "type": "boolean",
  "description": "Is NCB transfered to current policy?"
  },
  "quotationDate": {
  "title": "quotationDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "First Quotation date of the proposal",
  "format": "date",
  "nullable": true
  },
  "purchaseDate": {
  "title": "purchaseDate",
  "pattern": "yyyy-MM-dd",
  "type": "string",
  "description": "Purchase date of the policy",
  "format": "date",
  "nullable": true
  },
  "coverages": {
  "$ref": "#/components/schemas/MotorCoverages"
  }
  },
  "description": "Motor contract details"
  },
  "MotorCoverages": {
  "title": "coverages",
  "type": "object",
  "properties": {
  "voluntaryDeductible": {
  "type": "string",
  "enum": [
  "ZERO",
  "THOUSAND",
  "TWO_THOUSAND",
  "TWENTYFIVE_HUNDRED",
  "THREE_THOUSAND",
  "FOUR_THOUSAND",
  "FIVE_THOUSAND",
  "SIX_THOUSAND",
  "SEVEN_THOUSAND",
  "SEVENTYFIVE_HUNDRED",
  "EIGHT_THOUSAND",
  "NINE_THOUSAND",
  "TEN_THOUSAND",
  "ELEVEN_THOUSAND",
  "TWELVE_THOUSAND",
  "THIRTEEN_THOUSAND",
  "FOURTEEN_THOUSAND",
  "FIFTEEN_THOUSAND",
  "SIXTEEN_THOUSAND",
  "SEVENTEEN_THOUSAND",
  "EIGHTEEN_THOUSAND",
  "NINETEEN_THOUSAND",
  "TWENTY_THOUSAND",
  "TWENTY_ONE_THOUSAND",
  "TWENTY_TWO_THOUSAND",
  "TWENTY_THREE_THOUSAND",
  "TWENTY_FOUR_THOUSAND",
  "TWENTY_FIVE_THOUSAND"
  ]
  },
  "thirdPartyLiability": {
  "$ref": "#/components/schemas/MotorThirdPartyCover"
  },
  "ownDamage": {
  "$ref": "#/components/schemas/MotorOwnDamageCover"
  },
  "fire": {
  "$ref": "#/components/schemas/MotorFireCover"
  },
  "theft": {
  "$ref": "#/components/schemas/MotorTheftCover"
  },
  "personalAccident": {
  "$ref": "#/components/schemas/MotorPACover"
  },
  "accessories": {
  "$ref": "#/components/schemas/MotorAccessoriesCover"
  },
  "addons": {
  "$ref": "#/components/schemas/MotorAddonsCover"
  },
  "legalLiability": {
  "$ref": "#/components/schemas/MotorLegalLiabilityCover"
  },
  "unnamedPA": {
  "$ref": "#/components/schemas/MotorUnnamedPACover"
  },
  "isGeoExt": {
  "type": "boolean"
  },
  "isTheftAndConversionRiskIMT43": {
  "type": "boolean"
  },
  "isIMT23": {
  "type": "boolean"
  },
  "isOverturningExclusionIMT47": {
  "type": "boolean"
  }
  },
  "description": "Motor covergae details"
  },
  "MotorFireCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "discount": {
  "$ref": "#/components/schemas/Discount"
  },
  "surcharge": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "MotorLegalLiabilityCover": {
  "type": "object",
  "properties": {
  "paidDriverLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  },
  "employeesLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  },
  "unnamedPaxLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  },
  "cleanersLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  },
  "nonFarePaxLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  },
  "workersCompensationLL": {
  "$ref": "#/components/schemas/LegalLiabilityCover"
  }
  }
  },
  "MotorOwnDamageCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDep": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "ncbDiscountWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyNetPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "policyGrossPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "discount": {
  "$ref": "#/components/schemas/Discount"
  },
  "surcharge": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDep": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDep": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "surchargeWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Surcharge"
  }
  }
  },
  "MotorPACover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "MotorPartnerApplicationOut": {
  "required": [
  "applicationId",
  "bancassurance",
  "cesses",
  "contract",
  "dealer",
  "discounts",
  "documents",
  "enquiryId",
  "grossPremium",
  "loadings",
  "motorBreakIn",
  "motorQuestions",
  "netPremium",
  "nominee",
  "payment",
  "persons",
  "policyNumber",
  "policyState",
  "policyStatus",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "serviceTax",
  "state",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/MotorContract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  },
  "motorBreakIn": {
  "$ref": "#/components/schemas/MotorBreakIn"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  }
  },
  "description": "Motor application create/ update response object"
  },
  "MotorTheftCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "discount": {
  "$ref": "#/components/schemas/Discount"
  },
  "surcharge": {
  "$ref": "#/components/schemas/Surcharge"
  },
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "MotorThirdPartyCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "isTPPD",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "isTPPD": {
  "title": "isTPPD",
  "type": "boolean",
  "description": "Is TPPD taken?"
  }
  }
  },
  "MotorUnnamedPACover": {
  "type": "object",
  "properties": {
  "unnamedPax": {
  "$ref": "#/components/schemas/UnnamedPACover"
  },
  "unnamedPaidDriver": {
  "$ref": "#/components/schemas/UnnamedPACover"
  },
  "unnamedHirer": {
  "$ref": "#/components/schemas/UnnamedPACover"
  },
  "unnamedPillionRider": {
  "$ref": "#/components/schemas/UnnamedPACover"
  },
  "unnamedCleaner": {
  "$ref": "#/components/schemas/UnnamedPACover"
  },
  "unnamedConductor": {
  "$ref": "#/components/schemas/UnnamedPACover"
  }
  }
  },
  "PartsDepreciationCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "claimsCovered": {
  "type": "string",
  "enum": [
  "ONE",
  "TWO",
  "UNLIMITED",
  "ONE_PB",
  "ONE_KP"
  ]
  },
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "PersonalBelongingCover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "claimsCovered": {
  "type": "string",
  "enum": [
  "ONE",
  "TWO",
  "UNLIMITED",
  "ONE_PB",
  "ONE_KP"
  ]
  },
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "withZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "withoutZeroDepNetPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithPreInspection": {
  "$ref": "#/components/schemas/Money"
  },
  "netPremiumWithoutZeroDepWithoutPreInspection": {
  "$ref": "#/components/schemas/Money"
  }
  }
  },
  "UnnamedPACover": {
  "required": [
  "coverAvailability",
  "coverTerm",
  "insuredAmount",
  "insuredCount",
  "selection"
  ],
  "type": "object",
  "properties": {
  "selection": {
  "title": "selection",
  "type": "boolean",
  "description": "Cover selection flag"
  },
  "insuredAmount": {
  "title": "insuredAmount",
  "minimum": 0,
  "type": "number",
  "description": "Cover SI amount"
  },
  "coverTerm": {
  "title": "coverTerm",
  "maximum": 5,
  "minimum": 1,
  "type": "integer",
  "description": "Cover term",
  "format": "int32"
  },
  "coverAvailability": {
  "title": "coverAvailability",
  "type": "string",
  "description": "Cover availability type",
  "readOnly": true,
  "enum": [
  "MANDATORY",
  "AVAILABLE",
  "NOT_AVAILABLE"
  ]
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "traiffPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "insuredCount": {
  "title": "insuredCount",
  "minimum": 1,
  "type": "integer",
  "description": "Insured person count",
  "format": "int32"
  }
  }
  },
  "MotorPartnerApplicationIn": {
  "required": [
  "bancassurance",
  "contract",
  "dealer",
  "documents",
  "enquiryId",
  "motorQuestions",
  "nominee",
  "payment",
  "persons",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/MotorContract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "persons": {
  "minItems": 1,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Person"
  }
  },
  "nominee": {
  "$ref": "#/components/schemas/Individual"
  },
  "dealer": {
  "$ref": "#/components/schemas/MotorDealer"
  },
  "motorQuestions": {
  "$ref": "#/components/schemas/MotorQuestions"
  },
  "bancassurance": {
  "$ref": "#/components/schemas/Bancassurance"
  },
  "payment": {
  "$ref": "#/components/schemas/Payment"
  },
  "documents": {
  "title": "documents",
  "type": "array",
  "description": "Policy documents",
  "items": {
  "$ref": "#/components/schemas/DigitDocument"
  }
  }
  },
  "description": "Motor application create/ update request object"
  },
  "MotorPartnerQuickQuoteOut": {
  "required": [
  "applicationId",
  "cesses",
  "contract",
  "discounts",
  "enquiryId",
  "grossPremium",
  "loadings",
  "motorBreakIn",
  "netPremium",
  "pincode",
  "policyNumber",
  "policyState",
  "policyStatus",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "serviceTax",
  "state",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/MotorContract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "pincode": {
  "title": "pincode",
  "type": "string",
  "description": "Pincode of residence"
  },
  "motorBreakIn": {
  "$ref": "#/components/schemas/MotorBreakIn"
  },
  "netPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "grossPremium": {
  "$ref": "#/components/schemas/Money"
  },
  "discounts": {
  "$ref": "#/components/schemas/Discount"
  },
  "loadings": {
  "$ref": "#/components/schemas/Loading"
  },
  "serviceTax": {
  "$ref": "#/components/schemas/ServiceTax"
  },
  "cesses": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "$ref": "#/components/schemas/Cess"
  }
  },
  "informationMessages": {
  "minItems": 0,
  "type": "array",
  "readOnly": true,
  "items": {
  "title": "informationMessages",
  "type": "string",
  "description": "Information message from core system",
  "readOnly": true
  }
  },
  "error": {
  "$ref": "#/components/schemas/DigitError"
  },
  "applicationId": {
  "title": "applicationId",
  "type": "string",
  "description": "Digit generated unique applicationId for each proposal",
  "readOnly": true
  },
  "policyStatus": {
  "title": "policyStatus",
  "type": "string",
  "description": "Digit proposal status",
  "readOnly": true,
  "enum": [
  "EFFECTIVE",
  "COMPLETED",
  "COMPLETE",
  "INCOMPLETE",
  "PENDING_DOCUMENTS",
  "PENDING_PAYMENT",
  "UW_REFFERED",
  "FOLLOW_UP",
  "DECLINED",
  "DELETED",
  "PI_DECLINED",
  "SELF_INSPECTION_PENDING",
  "PHYSICAL_INSPECTION_PENDING",
  "ASSESSMENT_PENDING",
  "PRE_INSPECTION_APPROVED",
  "PRE_INSPECTION_DECLINED",
  "CANCELLED"
  ]
  },
  "policyNumber": {
  "title": "policyNumber",
  "type": "string",
  "description": "Digit generated unique policy number for each proposal",
  "readOnly": true
  },
  "policyState": {
  "title": "policyState",
  "type": "string",
  "description": "Digit proposal state",
  "readOnly": true,
  "enum": [
  "QUOTATION",
  "APPLICATION",
  "CONTRACT"
  ]
  },
  "state": {
  "title": "state",
  "type": "string",
  "description": "Digit proposal/ policy state",
  "readOnly": true,
  "enum": [
  "ACTIVE",
  "FREE_PREMIUM",
  "DORMANT",
  "CANCELLED"
  ]
  }
  },
  "description": "Motor quick quote response object"
  },
  "MotorPartnerQuickQuoteIn": {
  "required": [
  "contract",
  "enquiryId",
  "pincode",
  "pospInfo",
  "preInspection",
  "previousInsurer",
  "vehicle"
  ],
  "type": "object",
  "properties": {
  "enquiryId": {
  "title": "enquiryId",
  "maxLength": 30,
  "minLength": 1,
  "type": "string",
  "description": "Partner generated unique Id for each request"
  },
  "contract": {
  "$ref": "#/components/schemas/MotorContract"
  },
  "vehicle": {
  "$ref": "#/components/schemas/Vehicle"
  },
  "previousInsurer": {
  "$ref": "#/components/schemas/PreviousInsurer"
  },
  "pospInfo": {
  "$ref": "#/components/schemas/POSPInfo"
  },
  "preInspection": {
  "$ref": "#/components/schemas/PreInspection"
  },
  "motorTransits": {
  "minItems": 0,
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/MotorTransits"
  }
  },
  "pincode": {
  "title": "pincode",
  "type": "string",
  "description": "Pincode of residence"
  }
  },
  "description": "Motor quick quote request object"
  },
  "BSEEbixProposalStatusRequest": {
  "required": [
  "ProductCode",
  "ProposalNumber"
  ],
  "type": "object",
  "properties": {
  "ProposalNumber": {
  "type": "string"
  },
  "ProductCode": {
  "type": "string"
  }
  }
  },
  "BSEEbixAddress": {
  "required": [
  "AddressLine1",
  "AddressLine2",
  "AreaName",
  "City",
  "District",
  "Pincode"
  ],
  "type": "object",
  "properties": {
  "AddressLine1": {
  "type": "string"
  },
  "AddressLine2": {
  "type": "string"
  },
  "AddressLine3": {
  "type": "string"
  },
  "CityID": {
  "type": "string"
  },
  "City": {
  "type": "string"
  },
  "AreaID": {
  "type": "string"
  },
  "AreaName": {
  "type": "string"
  },
  "DistrictID": {
  "type": "string"
  },
  "District": {
  "type": "string"
  },
  "StateID": {
  "type": "string"
  },
  "State": {
  "type": "string"
  },
  "Pincode": {
  "type": "string"
  }
  }
  },
  "BSEEbixAgent": {
  "required": [
  "AgentBranch",
  "AgentBranchID",
  "AgentCode",
  "AgentType",
  "FirstName",
  "LastName",
  "MiddleName",
  "Mobile",
  "PAN",
  "PinCode"
  ],
  "type": "object",
  "properties": {
  "AgentCode": {
  "type": "string"
  },
  "AgentType": {
  "type": "string",
  "enum": [
  "POSP",
  "BQP",
  "SP"
  ]
  },
  "FirstName": {
  "type": "string"
  },
  "MiddleName": {
  "type": "string"
  },
  "LastName": {
  "type": "string"
  },
  "PAN": {
  "type": "string"
  },
  "Mobile": {
  "type": "string"
  },
  "AgentBranchID": {
  "type": "string"
  },
  "AgentBranch": {
  "type": "string"
  },
  "PinCode": {
  "type": "string"
  }
  }
  },
  "BSEEbixContract": {
  "required": [
  "PolicyType"
  ],
  "type": "object",
  "properties": {
  "PolicyType": {
  "type": "string"
  },
  "PolicyStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "PolicyEndDate": {
  "type": "string",
  "format": "date-time"
  }
  }
  },
  "BSEEbixCover": {
  "required": [
  "TPPDCover"
  ],
  "type": "object",
  "properties": {
  "GeoCountries": {
  "type": "string"
  },
  "ZeroDepCover": {
  "type": "boolean"
  },
  "RoadSideAssistCover": {
  "type": "boolean"
  },
  "TowingCover": {
  "type": "boolean"
  },
  "ReturnToInvoiceCover": {
  "type": "boolean"
  },
  "HydroStaticLockCover": {
  "type": "boolean"
  },
  "EngineGearBoxCover": {
  "type": "boolean"
  },
  "EngineGuardCover": {
  "type": "boolean"
  },
  "ConsumableCover": {
  "type": "boolean"
  },
  "KeyReplacementCover": {
  "type": "boolean"
  },
  "ElectricalAccessories": {
  "type": "number"
  },
  "NonElectricalAccessories": {
  "type": "number"
  },
  "VoluntaryDeductible": {
  "type": "number"
  },
  "AntiTheftDevice": {
  "type": "boolean"
  },
  "AutomobileAssociation": {
  "type": "string"
  },
  "PAtoOwnerDriverCover": {
  "type": "boolean"
  },
  "LiabilityToDriver": {
  "type": "integer",
  "format": "int32"
  },
  "PAToPaidDriver": {
  "$ref": "#/components/schemas/BSEEbixUNPACover"
  },
  "PAToUnNamedPassenger": {
  "$ref": "#/components/schemas/BSEEbixUNPACover"
  },
  "PAToNamedPassenger": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/BSEEbixNamedPACover"
  }
  },
  "TPPDCover": {
  "type": "boolean"
  },
  "NCBProtectionCover": {
  "type": "boolean"
  },
  "CNGLPGKit": {
  "type": "number"
  }
  }
  },
  "BSEEbixFinancer": {
  "required": [
  "FinancierCity",
  "FinancierName",
  "IsFinanced",
  "IsVehicleHypothicated"
  ],
  "type": "object",
  "properties": {
  "IsFinanced": {
  "type": "string"
  },
  "FinancierName": {
  "type": "string"
  },
  "FinancierCity": {
  "type": "string"
  },
  "IsVehicleHypothicated": {
  "type": "boolean"
  }
  }
  },
  "BSEEbixHeader": {
  "required": [
  "APIVersion",
  "MessageDateTime",
  "MessageId"
  ],
  "type": "object",
  "properties": {
  "MessageId": {
  "type": "string"
  },
  "MessageDateTime": {
  "type": "string",
  "format": "date-time"
  },
  "APIVersion": {
  "type": "string"
  }
  }
  },
  "BSEEbixNamedPACover": {
  "type": "object",
  "properties": {
  "IsMandatory": {
  "type": "boolean"
  },
  "IsChecked": {
  "type": "boolean"
  },
  "SumInsured": {
  "type": "number"
  },
  "PassengerName": {
  "type": "string"
  },
  "NomineeName": {
  "type": "string"
  },
  "NomineeDOB": {
  "type": "string",
  "format": "date"
  },
  "NomineeRelationship": {
  "type": "string"
  },
  "NomineeAddress": {
  "type": "string"
  },
  "AppointeeName": {
  "type": "string"
  }
  }
  },
  "BSEEbixPreviousInsurer": {
  "required": [
  "ClaimInPreviousPolicy",
  "IsZeroDepInPreviousPolicy",
  "OwnershipChangeInLast12Months",
  "PrevInsurerCompanyId",
  "PrevInsurerCompanyName",
  "PrevPolicyEndDate",
  "PrevPolicyStartDate",
  "PrevPolicyType",
  "PreviousNCB",
  "PreviousPolicyNo"
  ],
  "type": "object",
  "properties": {
  "PrevPolicyStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "PrevPolicyEndDate": {
  "type": "string",
  "format": "date-time"
  },
  "ClaimInPreviousPolicy": {
  "type": "boolean"
  },
  "PreviousNCB": {
  "type": "integer",
  "format": "int32"
  },
  "PrevInsurerCompanyId": {
  "type": "string"
  },
  "PrevInsurerCompanyName": {
  "type": "string"
  },
  "PreviousPolicyNo": {
  "type": "string"
  },
  "IsZeroDepInPreviousPolicy": {
  "type": "boolean"
  },
  "PrevPolicyType": {
  "type": "string"
  },
  "OwnershipChangeInLast12Months": {
  "type": "boolean"
  }
  }
  },
  "BSEEbixProposalRequest": {
  "required": [
  "Agent",
  "Cover",
  "Header",
  "IntermediaryCode",
  "LOB",
  "NewPolicy",
  "PreviousInsurance",
  "Product",
  "QuotationNumber",
  "QuoteID",
  "Vehicle",
  "VehicleInspection"
  ],
  "type": "object",
  "properties": {
  "QuotationNumber": {
  "type": "string"
  },
  "VehicleInspection": {
  "$ref": "#/components/schemas/BSEEbixVehicleInspection"
  },
  "IntermediaryCode": {
  "type": "string"
  },
  "NewPolicy": {
  "$ref": "#/components/schemas/BSEEbixContract"
  },
  "Vehicle": {
  "$ref": "#/components/schemas/BSEEbixVehicle"
  },
  "Agent": {
  "$ref": "#/components/schemas/BSEEbixAgent"
  },
  "PreviousInsurance": {
  "$ref": "#/components/schemas/BSEEbixPreviousInsurer"
  },
  "Product": {
  "type": "string"
  },
  "QuoteID": {
  "type": "string"
  },
  "LOB": {
  "type": "string"
  },
  "Cover": {
  "$ref": "#/components/schemas/BSEEbixCover"
  },
  "Header": {
  "$ref": "#/components/schemas/BSEEbixHeader"
  }
  }
  },
  "BSEEbixProposer": {
  "required": [
  "CommunicationAddress",
  "DateOfBirth",
  "EmailId",
  "FirstName",
  "Gender",
  "LastName",
  "MobileNo",
  "PermanentAddress",
  "RegistrationAddress"
  ],
  "type": "object",
  "properties": {
  "Title": {
  "type": "string"
  },
  "FirstName": {
  "type": "string"
  },
  "MiddleName": {
  "type": "string"
  },
  "LastName": {
  "type": "string"
  },
  "Gender": {
  "type": "string"
  },
  "EmailId": {
  "type": "string"
  },
  "MobileNo": {
  "type": "string"
  },
  "PhoneNo": {
  "type": "string"
  },
  "MaritalStatus": {
  "type": "string"
  },
  "Nationality": {
  "type": "string"
  },
  "DateOfBirth": {
  "type": "string",
  "format": "date"
  },
  "Occupation": {
  "type": "string"
  },
  "OccupationDesc": {
  "type": "string"
  },
  "GSTIN": {
  "type": "string"
  },
  "DrivingExperience": {
  "type": "integer",
  "format": "int32"
  },
  "NomineeName": {
  "type": "string"
  },
  "NomineeAge": {
  "type": "integer",
  "format": "int32"
  },
  "NomineeDOB": {
  "type": "string",
  "format": "date"
  },
  "RelationshipWithNominee": {
  "type": "string"
  },
  "RegistrationAddress": {
  "$ref": "#/components/schemas/BSEEbixAddress"
  },
  "CommunicationAddress": {
  "$ref": "#/components/schemas/BSEEbixAddress"
  },
  "PermanentAddress": {
  "$ref": "#/components/schemas/BSEEbixAddress"
  }
  }
  },
  "BSEEbixUNPACover": {
  "required": [
  "NoOfDrivers",
  "NoOfPassengers",
  "SumInsured"
  ],
  "type": "object",
  "properties": {
  "NoOfDrivers": {
  "type": "integer",
  "format": "int32"
  },
  "NoOfPassengers": {
  "type": "integer",
  "format": "int32"
  },
  "SumInsured": {
  "type": "number"
  }
  }
  },
  "BSEEbixVehicle": {
  "required": [
  "CC",
  "ChasisNo",
  "Cover",
  "EbixVehID",
  "EngineNo",
  "FinancierDetail",
  "FuelType",
  "IDV",
  "Make",
  "ManufacturingYear",
  "Model",
  "PUCEndDate",
  "PUCStartDate",
  "PreviousInsurance",
  "ProposerDetails",
  "RTOLocation",
  "RegistrationDate",
  "SeatCapacity",
  "Variant",
  "VehRegNo"
  ],
  "type": "object",
  "properties": {
  "Make": {
  "type": "string"
  },
  "Model": {
  "type": "string"
  },
  "Variant": {
  "type": "string"
  },
  "CC": {
  "type": "integer",
  "format": "int32"
  },
  "FuelType": {
  "type": "string"
  },
  "RTOLocation": {
  "type": "string"
  },
  "ManufacturingYear": {
  "type": "integer",
  "format": "int32"
  },
  "RegistrationDate": {
  "type": "string",
  "format": "date"
  },
  "IDV": {
  "type": "number"
  },
  "SeatCapacity": {
  "type": "integer",
  "format": "int32"
  },
  "EngineNo": {
  "type": "string"
  },
  "ChasisNo": {
  "type": "string"
  },
  "VehRegNo": {
  "type": "string"
  },
  "FinancierDetail": {
  "$ref": "#/components/schemas/BSEEbixFinancer"
  },
  "Cover": {
  "$ref": "#/components/schemas/BSEEbixCover"
  },
  "PreviousInsurance": {
  "$ref": "#/components/schemas/BSEEbixPreviousInsurer"
  },
  "ProposerDetails": {
  "$ref": "#/components/schemas/BSEEbixProposer"
  },
  "EbixVehID": {
  "type": "string"
  },
  "PUCStartDate": {
  "type": "string",
  "format": "date"
  },
  "PUCEndDate": {
  "type": "string",
  "format": "date"
  }
  }
  },
  "BSEEbixVehicleInspection": {
  "required": [
  "InspectionLocation",
  "InspectionType"
  ],
  "type": "object",
  "properties": {
  "InspectionType": {
  "type": "string"
  },
  "InspectionLocation": {
  "type": "string",
  "enum": [
  "C",
  "P",
  "R"
  ]
  }
  }
  },
  "BSEEbixQuotationRequest": {
  "required": [
  "Agent",
  "Cover",
  "Header",
  "IntermediaryCode",
  "LOB",
  "NewPolicy",
  "PreviousInsurance",
  "Product",
  "QuoteID",
  "Vehicle"
  ],
  "type": "object",
  "properties": {
  "IntermediaryCode": {
  "type": "string"
  },
  "NewPolicy": {
  "$ref": "#/components/schemas/BSEEbixContract"
  },
  "Vehicle": {
  "$ref": "#/components/schemas/BSEEbixVehicle"
  },
  "Agent": {
  "$ref": "#/components/schemas/BSEEbixAgent"
  },
  "PreviousInsurance": {
  "$ref": "#/components/schemas/BSEEbixPreviousInsurer"
  },
  "Product": {
  "type": "string"
  },
  "QuoteID": {
  "type": "string"
  },
  "LOB": {
  "type": "string"
  },
  "Cover": {
  "$ref": "#/components/schemas/BSEEbixCover"
  },
  "Header": {
  "$ref": "#/components/schemas/BSEEbixHeader"
  }
  }
  },
  "PhonePeProposalRequest": {
  "required": [
  "IDVType",
  "PACoverDuration",
  "RTOCode",
  "activeTpEndDate",
  "activeTpInsurerCode",
  "activeTpPolicyNumber",
  "activeTpStartDate",
  "addOns",
  "address",
  "amount",
  "chassisNumber",
  "engineNumber",
  "financierName",
  "isUserPACovered",
  "loanTaken",
  "makeCode",
  "modelCode",
  "nomineeAge",
  "nomineeName",
  "nomineeRelation",
  "packages",
  "paymentTransactionId",
  "previousInsurerCode",
  "previousPolicyClaimed",
  "previousPolicyExpiryDate",
  "previousPolicyNcbPercentage",
  "previousPolicyNumber",
  "proposerCity",
  "proposerEmail",
  "proposerMobile",
  "proposerName",
  "proposerPincode",
  "proposerState",
  "providerProductCode",
  "quoteTransactionId",
  "registrationDate",
  "registrationNumber",
  "requestId",
  "variantCode",
  "vehicleCode"
  ],
  "type": "object",
  "properties": {
  "proposerEmail": {
  "maxLength": 100,
  "minLength": 1,
  "type": "string"
  },
  "proposerCity": {
  "maxLength": 79,
  "minLength": 1,
  "type": "string"
  },
  "proposerMobile": {
  "maxLength": 100,
  "minLength": 1,
  "type": "string"
  },
  "providerProductCode": {
  "maxLength": 10,
  "minLength": 1,
  "type": "string"
  },
  "paymentTransactionId": {
  "maxLength": 150,
  "minLength": 1,
  "type": "string"
  },
  "proposerState": {
  "type": "string"
  },
  "address": {
  "maxLength": 158,
  "minLength": 0,
  "type": "string"
  },
  "quoteTransactionId": {
  "maxLength": 20,
  "minLength": 1,
  "type": "string"
  },
  "proposerName": {
  "maxLength": 150,
  "minLength": 1,
  "type": "string"
  },
  "registrationNumber": {
  "maxLength": 15,
  "minLength": 6,
  "type": "string"
  },
  "engineNumber": {
  "maxLength": 20,
  "minLength": 5,
  "type": "string"
  },
  "chassisNumber": {
  "maxLength": 30,
  "minLength": 5,
  "type": "string"
  },
  "loanTaken": {
  "type": "boolean"
  },
  "financierName": {
  "maxLength": 150,
  "minLength": 0,
  "type": "string"
  },
  "amount": {
  "type": "number"
  },
  "nomineeName": {
  "maxLength": 150,
  "minLength": 0,
  "type": "string"
  },
  "nomineeAge": {
  "type": "integer",
  "format": "int32"
  },
  "nomineeRelation": {
  "maxLength": 2147483647,
  "minLength": 0,
  "type": "string"
  },
  "proposerPincode": {
  "maxLength": 6,
  "minLength": 6,
  "type": "string"
  },
  "previousPolicyExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "previousPolicyNumber": {
  "type": "string"
  },
  "registrationDate": {
  "type": "string",
  "format": "date-time"
  },
  "vehicleCode": {
  "maxLength": 10,
  "minLength": 10,
  "type": "string"
  },
  "requestId": {
  "maxLength": 20,
  "minLength": 1,
  "type": "string"
  },
  "makeCode": {
  "type": "string"
  },
  "modelCode": {
  "type": "string"
  },
  "variantCode": {
  "type": "string"
  },
  "RTOCode": {
  "maxLength": 2147483647,
  "minLength": 4,
  "type": "string"
  },
  "IDVType": {
  "type": "string",
  "enum": [
  "MIN",
  "MAX",
  "AVG"
  ]
  },
  "isUserPACovered": {
  "type": "boolean"
  },
  "PACoverDuration": {
  "type": "integer",
  "format": "int32"
  },
  "packages": {
  "type": "array",
  "items": {
  "type": "string"
  }
  },
  "addOns": {
  "type": "array",
  "items": {
  "type": "string",
  "enum": [
  "RSA",
  "ZD",
  "CM",
  "RTI",
  "EP",
  "TYRE",
  "RIM",
  "PB",
  "KP"
  ]
  }
  },
  "previousPolicyClaimed": {
  "type": "boolean"
  },
  "previousPolicyNcbPercentage": {
  "maximum": 65,
  "minimum": 0,
  "type": "integer",
  "format": "int32"
  },
  "previousInsurerCode": {
  "type": "string"
  },
  "activeTpStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "activeTpEndDate": {
  "type": "string",
  "format": "date-time"
  },
  "activeTpInsurerCode": {
  "type": "string"
  },
  "activeTpPolicyNumber": {
  "type": "string"
  }
  }
  },
  "PhonePeProposalStatusRequest": {
  "required": [
  "quoteTransactionId"
  ],
  "type": "object",
  "properties": {
  "quoteTransactionId": {
  "maxLength": 20,
  "minLength": 1,
  "type": "string"
  }
  }
  },
  "PhonePeQuotationRequest": {
  "required": [
  "IDVType",
  "PACoverDuration",
  "RTOCode",
  "activeTpEndDate",
  "activeTpInsurerCode",
  "activeTpPolicyNumber",
  "activeTpStartDate",
  "addOns",
  "isUserPACovered",
  "makeCode",
  "modelCode",
  "packages",
  "pincode",
  "previousInsurerCode",
  "previousPolicyClaimed",
  "previousPolicyExpiryDate",
  "previousPolicyNcbPercentage",
  "previousPolicyNumber",
  "productCode",
  "registrationDate",
  "requestId",
  "variantCode",
  "vehicleCode"
  ],
  "type": "object",
  "properties": {
  "productCode": {
  "maxLength": 10,
  "minLength": 1,
  "type": "string"
  },
  "previousPolicyExpiryDate": {
  "type": "string",
  "format": "date-time"
  },
  "previousPolicyNumber": {
  "type": "string"
  },
  "registrationDate": {
  "type": "string",
  "format": "date-time"
  },
  "vehicleCode": {
  "maxLength": 10,
  "minLength": 10,
  "type": "string"
  },
  "requestId": {
  "maxLength": 20,
  "minLength": 1,
  "type": "string"
  },
  "makeCode": {
  "type": "string"
  },
  "modelCode": {
  "type": "string"
  },
  "variantCode": {
  "type": "string"
  },
  "RTOCode": {
  "maxLength": 2147483647,
  "minLength": 4,
  "type": "string"
  },
  "IDVType": {
  "type": "string",
  "enum": [
  "MIN",
  "MAX",
  "AVG"
  ]
  },
  "isUserPACovered": {
  "type": "boolean"
  },
  "PACoverDuration": {
  "type": "integer",
  "format": "int32"
  },
  "packages": {
  "type": "array",
  "items": {
  "type": "string"
  }
  },
  "addOns": {
  "type": "array",
  "items": {
  "type": "string",
  "enum": [
  "RSA",
  "ZD",
  "CM",
  "RTI",
  "EP",
  "TYRE",
  "RIM",
  "PB",
  "KP"
  ]
  }
  },
  "previousPolicyClaimed": {
  "type": "boolean"
  },
  "previousPolicyNcbPercentage": {
  "maximum": 65,
  "minimum": 0,
  "type": "integer",
  "format": "int32"
  },
  "previousInsurerCode": {
  "type": "string"
  },
  "activeTpStartDate": {
  "type": "string",
  "format": "date-time"
  },
  "activeTpEndDate": {
  "type": "string",
  "format": "date-time"
  },
  "activeTpInsurerCode": {
  "type": "string"
  },
  "activeTpPolicyNumber": {
  "type": "string"
  },
  "pincode": {
  "maxLength": 6,
  "minLength": 6,
  "type": "string"
  }
  }
  }
  },
  "securitySchemes": {
  "Basic Authorization": {
  "type": "http",
  "scheme": "basic"
  }
  }
  }
  }
